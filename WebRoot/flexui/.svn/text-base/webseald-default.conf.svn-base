#
# FILENAME
#	webseald.conf
#
# DESCRIPTION
#	Configuration file for the Access Manager WebSEAL server (webseald)
#


[server]
###############################
# WEBSEAL GENERAL
###############################

#----------------------
# SYSTEM
#----------------------

# WebSEAL instance UNIX user account
unix-user = ivmgr

# WebSEAL instance UNIX group account
unix-group = ivmgr

# PID file
unix-pid-file = /var/pdweb/log/webseald-default.pid

#Root directory for the webserver
server-root = /opt/pdweb/www-default

# WebSEAL server instance name. Typically, this is based on the hostname of the
# machine and the instance name of the server.
server-name = cyzyegov1-default

# If web-host-name is set WebSEAL will use this for the server's hostname.  If
# left unset WebSEAL will attempt to automatically determine the server's
# hostname.  On systems with many hostnames, interfaces or WebSEAL instances
# the automatic determination may not always be correct requiring this manual
# setting.
# web-host-name = www.webseal.com

#----------------------
# THREADS AND CONNECTIONS
#----------------------

# Number of WebSEAL worker threads
# The number of configured worker threads specifies the number of
# concurrent incoming requests that can be serviced by this server
# instance. Choosing the optimal number depends on the quantity
# and type of traffic on your network. Modifying this value should
# be done carefully to ensure optimal performance. Please consult
# the WebSEAL Administration Guide for further information.
worker-threads = 100

# Initial client connection timeout (seconds)
client-connect-timeout = 120

# HTTP/1.1 persistent connection timeout (seconds)
# This only affects connections to clients, not backend systems.
persistent-con-timeout = 5

# Intra-request timeout (seconds)
# Timeout between data received or sent for a given request,
# but not the first read.  When this value is non-zero, it
# also enables timeouts on http writes to clients and causes
# a TCP RST packet to be sent if a connection timeout occurs
# on the non-first data I/O.  When this value is zero, the
# client-connection-timeout is used instead.
intra-connection-timeout = 60

# The maximum number of requests that will be processed on a single
# persistent connection.
connection-request-limit = 100

# Allow WebSEAL to write chunked data to HTTP/1.1 clients.  This can
# improve performance by allowing connections to be reused even when
# exact response length is not known before the response is written.
chunk-responses = yes

#----------------------
# HTTPS CLIENT
#----------------------

# Allow HTTPS access
https = yes

# Port to user for HTTPS requests
https-port = 443

#----------------------
#  HTTP CLIENT
#----------------------

# Allow (unsecure) TCP HTTP access
http = yes

# Port to use for unsecure HTTP requests
http-port = 80

# The following two options can be used to compensate for a protocol or port
# mismatch between WebSEAL and its clients introduced by an intervening
# device or application.
#
# web-http-port should be set to the port the client perceives WebSEAL to be
# using, as opposed to the actual port WebSEAL is using, which is specified
# by the http-port parameter.
# web-http-port is optional.
#
# web-http-protocol should be set to the protocol the browser perceives
# WebSEAL to be using, as opposed to the protocol that the intervening
# device uses to communicate with WebSEAL.
# Valid values are "http" or "https".
# web-http-protocol is optional.
#
#web-http-port = 80
#web-http-protocol = http

#----------------------
# REQUEST BODIES AND CACHING
#----------------------

# This parameter specifies the maximum number of bytes that
# WebSEAL will read from a client when parsing an HTTP request.
# The total size of the URL and HTTP headers must be less than
# this value.  This parameter cannot be set lower than it's
# default: 32768
max-client-read = 32768

# This parameter specifies the maximum number of bytes to
# read in as content from the body of requests for use in
# dynurl, authentication, and request caching.
#
# 1) This impacts dynurl because the query portion of a
#    POST request URI is contained in the request body.
#
# 2) This impacts forms authentication, because this limits
#    the size of the POST data that will be processed
#    when performing such authentication.  For this reason,
#    WebSEAL sets a hard minimum of 512 bytes on
#    request-body-max-read. If this value is set below
#    that minimum, the setting will be ignored and the
#    minimum will be used.
#
# 3) This affects the amount of data that WebSEAL will cache
#    for users who must authenticate before their request can be
#    fulfilled.  This affects all request that have bodies
#    (POSTs, PUTs, etc.).
#
# This does not limit the max POST size (which is unlimited).
#
request-body-max-read = 4096

# When a user is prompted to authenticate before a request
# can be fulfilled, the data from that request is cached
# for processing after the completion of the authentication.
# The maximum amount of data cached per request is determined
# by request-max-cache.
# If you want to ensure that you will be caching all of
# request-body-max-read worth of the body of requests, you
# must account for the maximum size of all the other request
# components in this value.
# Example: If you want to cache 2048 bytes of request bodies
# and you anticipate that the maximum size of all request headers
# and cookies will be 4096 bytes, you would:
# 1)  set request-body-max-read = 2048
# 2)  set request-max-cache = 2048 + 4096 = 6144
request-max-cache = 8192

#----------------------
#  DYNURL
#----------------------

# Location of the URL -> protected object mapping file
# This path is relative to the server-root value in the [server] stanza
dynurl-map = lib/dynurl.conf

# Disallow/Allow POST requests larger than request-body-max-read.
# This parameter only takes effect if dynurl is enabled.
#
# WebSEAL is not able to compare the entire contents of a POST
# request to the URL mappings inside the dynurl.conf file if the body
# of the post is larger than request-body-max-read.
#
# If this option is set to "no", then WebSEAL will not
# allow POST requests with a body larger than request-body-max-read.
#
# If this option is set to "yes", then WebSEAL will compare only
# up to request-body-max-read bytes of a POST request to the URL mappings
# in the dynurl.conf file.
dynurl-allow-large-posts = yes

# When reject-request-transfer-encodings is set to yes all request
# to WebSEAL with a Transfer-Encoding value of anything other than
# identity will be rejected with a status of 501, Not Implemented.
# It is recomended for secure dynurl environments to set this to yes.
reject-request-transfer-encodings = yes

# When suppress-dynurl-parsing-of-posts is set to "yes" POST bodies will
# not be used in dynurl processing, only Query strings will be used.
# Before enabling this you must be certain that all dynurl checked server
# applications do not accept arguments from POST bodies so dynurl checks
# can't be bypassed using a POST instead of a Query string.
suppress-dynurl-parsing-of-posts = no

#----------------------
# URI AND POST BODY DECODING
#----------------------

# If decode-query is set to "yes", WebSEAL will validate the query string
# in requests according to the utf8-qstring-support-enabled parameter.
# Otherwise, WebSEAL will not validate the query string.  If decode-query
# is set to "no" then dynurl must be disabled.
decode-query = yes

# Different portions of HTTP requests may be interpreted as either UTF-8 or
# local code page according to the configuration items in this section.  The
# options for each portion of the request are either to ensure that the data
# is UTF-8, ensure that the data is local codepage, or to accept either.
#
# If an option in this section is "yes", WebSEAL will ensure that the data
# in that portion of the request is UTF-8.
#
# If an option in this section is "no", WebSEAL will ensure that the data
# in that portion of the request is local codepage.
#
# If an option in this section is "auto", WebSEAL will first attempt to
# validate the data as UTF-8.  If the data is not UTF-8, then WebSEAL will
# ensure the data is local codepage.

# utf8-url-support-enabled controls how the location portion of the URI
# (the portion before any question mark character) is intepreted.
utf8-url-support-enabled = yes

# utf8-qstring-support-enabled controls how the query portion of the URI
# (the portion after the question mark character) is interpreted.  This also
# applies to the POST bodies of requests to junctions when dynurl is enabled.
utf8-qstring-support-enabled = no

# utf8-forms-support-enabled option controls how form logins, password change
# requests, and other WebSEAL specific forms are parsed.
utf8-form-support-enabled = yes

# When double-byte-encoding is set to 'yes' WebSEAL will assume that URL's
# which contain encoding characters are always encoded in unicode, and will
# not contain UTF-8 encoded characters.
double-byte-encoding = no

#----------------------
# SUPPRESSING SERVER IDENTITY
#----------------------

# WebSEAL writes a Server header with the value "WebSEAL/version.number"
# with most responses (except those from a junctioned server).
# Including this header can be suppressed by setting this to "yes".
suppress-server-identity = no

# For responses that were from a junctioned server, WebSEAL writes the Server
# header sent in the response from the backend. If the backend response did not
# include a Server header, then WebSEAL will not write any Server header to the
# client.
# Writing this header can be suppressed by setting this to "yes".
suppress-backend-server-identity = no

#----------------------
# AUTH TOKEN VERSION
#----------------------

# [e-community-sso], [failover], [cdsso] all use a common method
# for generating tokens.  Version 4.1.0 has increased the security
# of these.  However, it is not backward compatible.  If you are
# integrating with earlier web servers you will need to enable this.
pre-410-compatible-tokens = no

# Version 5.1.0 tokens are formatted differently then tokens in prior releases.
# If you are integrating with earlier web servers you will need to enable this
# to ensure the integrity of data across [e-community-sso], [failover], and
# [cdsso].
pre-510-compatible-tokens = no

#----------------------
# P3P Compact Policy header
#----------------------
# If 'preserve-p3p-policy' is set to 'no' (default), then any P3P headers from
# junctioned servers will be replaced.
#
# If 'preserve-p3p-policy' is set to 'yes', then any P3P headers from junctioned
# servers will be preserved.
preserve-p3p-policy = no

#----------------------
# Network Interface
#----------------------
# Specify an alternative I.P. address to be used by this instance of WebSEAL.
# This allows two or more WebSEAL instances to run on the same machine
# while using differing I.P. addresses and host names.
#
# network-interface = 0.0.0.0

#----------------------
# Filtering
#----------------------
# If preserve-base-href is no, then WebSEAL will remove all BASE HREF tags
# from filtered HTML documents and prepend the base tag to filtered links.
# Otherwise, the BASE HREF tag will be filtered.
preserve-base-href = yes

# To enable tag-based filtering of static URLs for new MIME types added
# to the [filter-content-types] stanza, change filter-nonhtml-as-xhtml to
# yes. Tag-based URL filtering operates without configuration changes
# for the text/html and text/vnd.wap.wml MIME types.
filter-nonhtml-as-xhtml = no

#---------------------
# TRACE method
#---------------------
# WebSEAL blocks the TRACE method by default for all requests
# to prevent a well-publicized security exploit.
#
# To enable TRACE method requests for local resources set
# http-method-trace-enabled = yes
#
# To enable TRACE method requests for junctioned resources set
# http-method-trace-enabled-remote = yes

#---------------------
# Processing root junction requests
#---------------------
# Specify whether WebSEAL will attempt to process requests for resources
# located at the root ('/') junction before attempting to identify a
# junction point to send the request via junction mapping mechanisms
# such as the JMT or IV_JCT cookie.
#
# Avoiding root junction processing prevents processing being performed
# for incorrect resources before the intended resource is identified.
# This will have performance benefits and prevent false authorization or
# filetype check failures.
#
# Valid choices are:
#  never  - Root junction requests are never processed at the root junction.
#           That is, if a junction mapping mechanism is configured, such as
#           the JMT or IV_JCT cookie, WebSEAL will look for this junction
#           mapping information first (and look at the root junction last)
#           and process the request at the mapped junction point.
#
#  always - Always attempt to process requests for the root junction at the
#           root junction first before looking for a configured junction
#           mapping mechanism, such as the JMT or IV_JCT cookie.
#           This is not recommended unless the root junction serves a large
#           set of resources or no junction mapping mechanisms are configured
#           for the set of junctions served by this WebSEAL server.
#
#  filter - All root junction requests will be examined to determine whether
#           they start with the patterns specified in the process-root-filter
#           stanza.
#           If yes, the request will be processed at the root junction first.
#           If no, the request will be remapped immediately.
#
process-root-requests = filter

#---------------------
# IPv6 support
#---------------------
#
# Specify whether WebSEAL will support IPv6.
#
# Upon a new installation, WebSEAL supports IPv6 by default.  However, if
# WebSEAL is upgraded from a release previous to 6.0, then the upgrade
# process will change this value to 'no'.  This is to ensure backwards
# compatibility.
#
# Valid choices are:
#  yes - Support IPv6 and IPv4 networks (default setting).
#
#  no  - Only support IPv4 networks.
#
ipv6-support = yes

# ip-support-level determines the network attributes placed in credentials.
# WebSEAL version 6.0 introduces new improved attributes which displace
# the older attribute.  The new attributes are required when IPv6 support
# (ipv6-support) is enabled.  This entry can be set to one of displaced-only,
# generic-only, or displaced-and-generic.
#
# displaced-only:
# The default for migrated installations.  WebSEAL will only generate the
# displaced IPv4 attributes when building credentials and when authenticating
# users through CDAS modules.
#
# generic-only:
# The default for new installations.  WebSEAL will only generate the new generic
# (supports both IPv4 and IPv6) attributes when building credentials and when
# authenticating users through CDAS modules.
#
# displaced-and-generic:
# Both sets of attributes (displaced and generic) are created.
#
ip-support-level = generic-only

#---------------------
# max-login-failures policy compatibility
#---------------------
#
# When late-lockout-notification = no, WebSEAL will notify clients that their
# account has been locked out immediately.
# When late-lockout-notification = yes WebSEAL will operate in a pre-v6.0
# compatible mode for user registry max-login-failures policy behavior,
# and not notify users until their next request.
# The default for new installations is disabled (no).  The default for migrated
# installations is enabled (yes).
late-lockout-notification = no

# When reject-invalid-host-header is set to yes all requests
# to WebSEAL with an invalid host header (see RFC2616) will be
# rejected with a status of 400, Bad Request.
reject-invalid-host-header = no

#---------------------
# Adding HttpOnly attribute
#---------------------
# When use-http-only-cookies is set to 'yes', WebSEAL will add the "HttpOnly"
# attribute to the session and failover cookies.  This will help defend against
# cross-site-scripting attacks by informing the browser not to make these
# cookies available to browser scripts.
use-http-only-cookies = no

#---------------------
# Allow all Shift-JIS Muti-Byte characters
#---------------------
# When allow-shift-jis-chars is set to "yes" junctions created using -w will
# allow all Shift-JIS Muti-Byte characters in junction file and path names.
# When set to "no" junction file and path names using Shift-JIS Multi-Byte
# characters containing the single byte character '\' will be rejected.
allow-shift-jis-chars = no

#---------------------
# Pipelining
#---------------------
# WebSEAL does not support pipelined requests from browsers.  When this option
# is set to "yes" and WebSEAL detects pipelined requests it will close the
# connection to inform the the browser that is should resend the pipelined
# requests in a normal manner.  This should always be set to "yes" unless the
# previous WebSEAL behavior is required.
cope-with-pipelined-request = yes

#---------------------
# Unauthenticated users and "-b supply"
#---------------------
# This parameter determines if unauthenticated users can access junctions
# created with "-b supply".  When set to "no" the default behavior occurs.
# Default behavior does not allow unauthenticated users to access resources
# on a junction created using "-b supply", rather it will prompt then to
# authenticate.  When "allow-unauth-ba-supply" is set to "yes" unauthenticated
# users will be allowed access "-b supply" junctions.  The basic authentication
# header supplied to the junction will contain the user name 'unauthenticated'.
allow-unauth-ba-supply = no

#---------------------
# Tag-value label for missing attributes
#---------------------
# WebSEAL allows credential attributes to be inserted into the HTTP stream
# as HTTP headers.  In the event that a requested attribute was not located
# within the credential the HTTP header will still be created with a static
# string.  The tag-value-missing-attr-tag configuration entry defines the
# contents of the header.
tag-value-missing-attr-tag = NOT_FOUND

# Each attribute name set in a junction object's HTTP-Tag-Value is
# automatically prefixed by "tagvalue_" before locating it in the credential.
# This prohibits access to credential attributes that don't have names
# beginning with "tagvalue_" such as "AUTHENTICATION_LEVEL".  When this option
# is set to "no", the automatic prefixing of "tagvalue_" will not occur so all
# credential attributes can be specified in HTTP-Tag-Value.
force-tag-value-prefix = yes


[process-root-filter]
# This stanza is only used if process-root-requests = filter
# Request URLs starting with the following patterns will be processed at the
# root junction before attempting to remap the requests to a new junction point.
# Format is
#       root = <pattern>
# where <pattern> is a standard WebSEAL wildcard pattern.
#
root = /index.html
root = /cgi-bin*


[interfaces]
###############################
# WEBSEAL INTERFACES
###############################
# The values from:
#   [server]
#     network-interface
#     http
#     http-port,
#     web-http-port,
#     web-http-protocol,
#     https,
#     https-port,
#     worker-threads
#   [ssl]
#     webseal-cert-keyfile-label
#   [certificate]
#     accept-client-certs
# are used to create the "default" interface.
#
# This stanza allows additional interfaces to be configured.
#
# The format of each interfaces entry is:
#
# <interfaceName> = <interfaceOptions>
# <interfacesOptions> = <Option>=<Value>[;<Option>=<Value>[;...]]
#
# Leading and Trailing Spaces surrounding <Option>, <Value> are ignored.
# If leading or trailing spaces are required then the <Value> may be placed
# in double quotes (").
# If a double quote ("), semicolon (;), or backslash (\) character is required
# in the <Value> then this character must be prefixed by a backslash (\).
#
# <Option>=<Value> can be selected from:
#	network-interface=<ipAddress>
#	http-port=<port> | "disabled"
#	https-port=<port> | "disabled"
#	web-http-port=<port> | "disabled"
#	web-http-protocol="http" | "https"
#	certificate-label=<keyFileLabel>
#	accept-client-certs="never" | "required" | "optional" |
#                           "prompt_as_needed"
#	worker-threads=<count> | "default"
#
# Defaults for <interfaceOptions> if they are not present:
#	network-interface	0.0.0.0
#	worker-threads		"default"
#	http-port		"disabled"
#	web-http-port		"disabled"
#	web-http-protocol	"http"
#	https-port		"disabled"
#	certificate-label	Uses key marked as default in key file.
#	accept-client-certs	"never"
#
# The following example configures an interface that only listens for http
# requests on address 10.0.0.1 port 81 (the https-port defaulted to "disabled").
#
# interface1 = network-interface=10.0.0.1; http-port=81


[header-names]
###############################
# HTTP Header Names
###############################

# server-name - This header can be used to pass the azn-api administration
# server name used with the "server task" command to junctioned applications.
# Leave this entry blank to disable the header.
server-name = iv_server_name

[ldap]
###############################
# LDAP
###############################
# ldap-server-config      - Indicates the location of the ldap.conf file
#                           (set by configuration)
# prefer-readwrite-server - yes|no Indicates whether to select writable
#                           LDAP server when available
# auth-using-compare      - yes|no Indicates whether to perform
#                           authentication using LDAP bind or comparing password
# bind-dn                 - Indicates the Distinguished Name of the daemon
#                           (set by configuration)
# ssl-enabled             - yes|no Indicates whether SSL is enabled (set
#                           by configuration)
# ssl-keyfile             - Indicates path/filename of SSL keyfile (set by
#                           configuration)
# ssl-keyfile-dn          - Indicates the certificate label in the SSL
#                           keyfile, if any (set by configuration)
# default-policy-override-support
#                         - yes|no When "yes", no user Policy will
#                           be checked, only the default Policy is checked
#                           (saves some LDAP searches)
# user-and-group-in-same-suffix
#                         - yes|no When "yes", indicates that the groups are
#                           defined in the same LDAP suffix as the user
#                           (saves some LDAP searches)
# login-failures-persistent
#                         - yes|no When "yes", login strikes will be tracked
#                           in the registry instead of only in the local
#                           process cache.  Persistent login strike recording
#                           is more expensive but allows consistent login
#                           strike counting across multiple servers.
# cache-enabled           - yes|no Indicates whether to enable the local
#                           LDAP cache
#
# cache-enabled related configuration settings:
#
# cache-user-size         - (optional) The number of entries in the LDAP user
#                           cache.  Ignored if the cache is not enabled.  If
#                           not set, the default is 256.
# cache-group-size        - (optional) The number of entries in the LDAP group
#                           cache.  Ignored if the cache is not enabled.  If
#                           not set, the default is 64.
# cache-policy-size       - (optional) The number of entries in the LDAP policy
#                           cache.  Ignored if the cache is not enabled.  If
#                           not set, the default is 20.
# cache-user-expire-time  - (optional) The amount of time (in seconds) until a
#                           user entry in the cache is considered stale and is
#                           discarded.  Ignored if the cache is not enabled.
#                           If not set, the default is 30 seconds.
# cache-group-expire-time - (optional) The amount of time (in seconds) until a
#                           group entry in the cache is considered stale and is
#                           discarded.  Ignored if the cache is not enabled.
#                           If not set, the default is 300 seconds (5 minutes).
# cache-policy-expire-time
#                         - (optional) The amount of time (in seconds) until a
#                           policy entry in the cache is considered stale and is
#                           discarded.  Ignored if the cache is not enabled.
#                           If not set, the default is 30 seconds.
# cache-group-membership  - (optional) Indicates whether group membership
#                           information should be cached.  Ignored if the cache
#                           is not enabled.  If not set, the default is yes.
# cache-use-user-cache    - (optional) Indicates whether to use the user cache
#                           information or not.  Ignored if the cache is not
#                           enabled.  If not set, the default is yes.
# cache-return-registry-id -(optional) Indicates whether to cache the user
#                           identity as it is stored in the registry or cache
#                           the value as entered during authentication.
#                           Ignored if the cache is not enabled.
#                           If not set, the default is no.


ldap-server-config = /opt/PolicyDirector/etc/ldap.conf
prefer-readwrite-server = no
auth-using-compare = yes
ssl-enabled = no
ssl-keyfile = <ldap-ssl-keyfile>
ssl-keyfile-dn = <ldap-ssl-keyfile-dn>
#default-policy-override-support = no
#user-and-group-in-same-suffix = yes
#login-failures-persistent = no

cache-enabled = yes

#cache-user-size = 256
#cache-group-size = 64
#cache-policy-size = 20
#cache-user-expire-time = 30
#cache-group-expire-time = 300
#cache-policy-expire-time = 30
#cache-group-membership = yes
#cache-use-user-cache = yes
cache-return-registry-id = no
bind-dn = cn=default-webseald/cyzyegov1,cn=SecurityDaemons,secAuthority=Default
enabled = yes
host = portal1.cytobacco.com
port = 389


[uraf-registry]
###############################
# DOMINO OR ACTIVE DIRECTORY
###############################

uraf-registry-config =
bind-id =
cache-mode = enabled
cache-size = 251
cache-lifetime = user:30;group:300;resgroup:3600;resource:3600;rescreds:300;

[ssl]
###############################
# SSL
###############################

# This section contains entries that affect the behavior of the SSL
# components of WebSEAL.  These will affect both clients connecting
# via SSL as well as SSL junctions to backend systems.

# The first four parameters (webseal-cert-*) relate to the certificate
# keystore WebSEAL keep for exchanging with browsers when negotiating
# SSL sessions.

# WebSEAL certificate keyfile
webseal-cert-keyfile = /var/pdweb/www-default/certs/pdsrv.kdb

# Password used to protect private keys in the keyfile.  The password
# can be stored in plain text or encrypted in a "stashfile".
# The stashfile is recommended, as it is more secure.
# If both password and stashfile are specified, the password will be used.
# webseal-cert-keyfile-pwd = <password>
webseal-cert-keyfile-stash = /var/pdweb/www-default/certs/pdsrv.sth

# Label of key to use other than the default
webseal-cert-keyfile-label = WebSEAL-Test-Only

# The next four parameters (ssl-keyfile-*) relate to the keystore WebSEAL
# uses for communicating with other Access Manager servers via SSL.  These
# parameters typically do not need to be modified other than by the
# configuration scripts.
ssl-keyfile = /var/pdweb/keytab-default/default-webseald.kdb

# Password used to protect private keys in the keyfile.  The password
# can be stored in plain text or encrypted in a "stashfile".
# The stashfile is recommended, as it is more secure.
# If both password and stashfile are specified, the password will be used.
#ssl-keyfile-pwd = <password>
ssl-keyfile-stash = /var/pdweb/keytab-default/default-webseald.sth

# Label of key to use other than the default
# ssl-keyfile-label =
ssl-keyfile-label = PD Server

# Selectively disable SSL version support for browser connections
disable-ssl-v2 = no
disable-ssl-v3 = no
disable-tls-v1 = no

# Session timeout for SSL v2 connections (range: 1-100 secs)
ssl-v2-timeout = 100

# Session timeout for SSL v3 connections (range: 1-86400 secs)
ssl-v3-timeout = 7200

# The maximum number of concurrent entries in the SSL cache
ssl-max-entries = 4096

# CRL Cache configuration.
# When gsk-crl-cache-size and gsk-crl-cache-entry-lifetime are
# both set to zero (which they are by default), CRL Caching will
# be disabled.

# The maximum number of entries in the GSKit CRL cache
# (must be > 0 to initialize CRL Caching)
gsk-crl-cache-size = 0

# Lifetime timeout for individual entries in the GSKit CRL cache
# (range: 0-86400 secs)
gsk-crl-cache-entry-lifetime = 0

# The following block of entries enables the configuration of an LDAP
# server to be referenced for CRL checking during SSL authentication.
# A null value for crl-ldap-user indicates that the SSL authenticator
# should bind to the LDAP server anonymously.

#crl-ldap-server = <server_name>
#crl-ldap-server-port = <port>
#crl-ldap-user = <user_DN>
#crl-ldap-user-password = <user_password>

# The following four entries allow configuration of GSKit support
# for external PKCS#11 libraries.  For added protection the pkcs11-token-pwd
# can alternatively be specified obfuscated using:
# # pdadmin -l
# pdadmin local> config modify keyvalue set -obfuscate <this config file> ssl pkcs11-token-pwd <token password>
# Warning: The plaintext value for pkcs11-token-pwd in this file will
#          override the obfuscated value.
#
# To enable PKCS#11 for symmetric algorithms, set
# pkcs11-symmetric-cipher-support to 'yes'.
# NOTE:
#   The PCKS#11 symmetric cipher support does not
#   include removable devices. If a removable device is encountered
#   it will be ignored even if the support has been requested.
#   Additionally, not all devices will support symmetric ciphers
#   please check your vendor documentation before usage.
#
#
#pkcs11-driver-path = <path of shared library>
#pkcs11-token-label = <token label>
#pkcs11-token-pwd = <token password>
#pkcs11-symmetric-cipher-support = no



# The following two entries allow disabling of GSKit's automatic use
# of nCipher nForce/nFast or Rainbow CryptoSwift Hardware Accelerators via
# their RSA BSAFE interface.
disable-ncipher-bsafe = no
disable-rainbow-bsafe = no

# Determine the Cipher engine used by GSKit
# It can be one of Default, RSA, ICC.  Setting it to RSA will
# affect the settings possible for fips-mode-processing.
base-crypto-library = Default

# Configure FIPS mode processing.  GSKit will not allow it to be
# enabled (set to yes) if base-crypto-library = RSA.
fips-mode-processing = no

# The follow two options are used enable OCSP.  Either or both can be used.
#ocsp-enable = no
#ocsp-url = <Absolute URL for OCSP responder>

# The following are OCSP options for interacting with the OCSP Responder.
#ocsp-nonce-generation-enable = no
#ocsp-nonce-check-enable = no
#ocsp-retrieve-via-get = no
#ocsp-max-response-size = 20480
#ocsp-proxy-server-name = <proxy host name>
#ocsp-proxy-server-port = <proxy port number>

# If, after OCSP checking, the revocation status of a browser supplied
# certificate is undetermined, WebSEAL can be configured to ignore this, log
# the fact, or log the fact and reject the connection by setting
# undetermined-revocation-cert-action to "ignore", "log" or "reject"
# respectively.
undetermined-revocation-cert-action = log

#
# local domain name.
#
ssl-local-domain = Default
ssl-auto-refresh = yes
ssl-listening-port = 7234
ssl-pwd-life = 183
ssl-authn-type = certificate


[junction]
###############################
# JUNCTION
###############################

# Location of the junction database
# This path is relative to the server-root value in the [server] stanza
junction-db = jct

# Location of the Junction to Request Mapping Table (JMT)
# This path is relative to the server-root value in the [server] stanza
jmt-map = lib/jmt.conf

# Timeout (in seconds) for sending to and reading from a TCP junction.
# Must be an integer greater than or equal to zero.
# A value of zero will cause WebSEAL to wait indefinitely.
http-timeout = 300

# Timeout (in seconds) for sending to and reading from an SSL junction.
# Must be an integer greater than or equal to zero.
# A value of zero will cause WebSEAL to wait indefinitely.
https-timeout = 300

# The WebSEAL server performs a periodic background 'ping' of each junctioned
# Web server, to determine whether it is running.  This entry sets the interval,
# in seconds, between pings.
# Must be an integer greater than zero.
ping-time = 300

# Global password used when supplying basic authentication
# data over junctions created with the "-b supply" argument.
basicauth-dummy-passwd = dummy

# These values will limit the percentage of total worker threads processing
# requests for junctions.  The default of 100% means there is no
# limit.  When the "soft" limit is reached, WebSEAL will generate a warning
# message.  When the "hard" limit is reached, WebSEAL will generate an error
# message and return a 503, "Service Unavailable", result to the client browser
# instead of requesting the resource from the junction.
# This value can be overridden on a per junction basis using pdadmin.
worker-thread-hard-limit = 100
worker-thread-soft-limit = 90

# Buffer size for reading from and writing to a junction.
io-buffer-size = 4096

# Maximum size, in bytes, of WebSEAL generated HTTP Headers.
# Headers over this size will be split across multiple
# HTTP Headers.  A value of "0" disables this support.
max-webseal-header-size = 0

#----------------------
# SENDING DOMAIN COOKIES
#----------------------

# If validate-backend-domain-cookies is set to "no", then all Domain set-cookies
# will be forwarded to the user, regardless of their content.
#
# If set to "yes" then Domain set-cookies will be evaluated to ensure that
# they adhere to the cookie specification.  Set-cookies with Domains that do not
# properly match the domain of the origin server will be removed from the
# request. Set-cookies that pass the validation will be forwarded to the client.

#
# Occasionally applications will send set-cookies with a Domain parameter
# that contains the FQHN of the origin server.  To ensure proper routing,
# WebSEAL will remove the Domain from these set-cookies before forwarding
# to the client.
validate-backend-domain-cookies = yes

# If allow-backend-domain-cookies is set to 'no', and
# validate-backend-domain-cookies = 'yes', then WebSEAL will remove
# the Domain from the set-cookie before forwarding.
#
# If allow-backend-domain-cookies = yes, then the Domain will not be removed.
# In addition, this will affect how WebSEAL filters the Path of set-cookies.
# Under certain circumstances, WebSEAL must modify the Path of set-cookies
# sent from junctioned origin servers to include the junction point to ensure
# that the user-agent will properly send the cookie with requests.
# WebSEAL will not do this for Domain set-cookies, because this might preclude
# those cookies from being sent to other systems in the domain, so if
# allow-backend-domain-cookies is set to 'yes', this Path modification will
# not take place for Domain set-cookies.
allow-backend-domain-cookies = no

# If validate-backend-domain-cookies is set to "yes", then
# support-virtual-host-domain-cookies will modify how WebSEAL validates
# the Domain of set-cookies.  This option will have no effect if
# validate-backend-domain-cookies = no
#
# If support-virtual-host-domain-cookies is set to "yes" then the domain cookie
# will be validated by comparing it with the virtual host specified for a
# backend server with the -v junction option.
#
# If set to "no", or if no virtual host was specified for a junction, then
# the FQHN will be compared with the Domain value of a set-cookie for
# validation.
support-virtual-host-domain-cookies = yes

# The following block of entries enables the configuration of an LDAP
# server to be referenced for CRL checking during SSL authentication.
# A null value for crl-ldap-user indicates that the SSL authenticator
# should bind to the LDAP server anonymously.
#crl-ldap-server = <server_name>
#crl-ldap-server-port = <port>
#crl-ldap-user = <user_DN>
#crl-ldap-user-password = <user_password>

# The follow two options are used enable OCSP for checking the revocation
# status of junction server supplied certificates.  Either or both can be used.
#jct-ocsp-enable = no
#jct-ocsp-url = <Absolute URL for OCSP responder>

# The following are OCSP options for interacting with the OCSP Responder.
#jct-ocsp-nonce-generation-enable = no
#jct-ocsp-nonce-check-enable = no
#jct-ocsp-max-response-size = 20480
#jct-ocsp-proxy-server-name = <proxy host name>
#jct-ocsp-proxy-server-port = <proxy port number>

# If, after OCSP checking, the revocation status of a junction server supplied
# certificate is undetermined, WebSEAL can be configured to ignore this, log
# the fact, or log the fact and reject the connection by setting
# jct-undetermined-revocation-cert-action to "ignore", "log" or "reject"
# respectively.
jct-undetermined-revocation-cert-action = log

# Selectively disable SSL version support for junction connections
disable-ssl-v2 = no
disable-ssl-v3 = no
disable-tls-v1 = no

# The next three configuration options allow a separate keyfile to be used
# for Junction SSL operations rather than sharing the one specified by [ssl]
# webseal-cert-keyfile, webseal-cert-keyfile-pwd and
# webseal-cert-keyfile-stash.  If jct-cert-keyfile is defined then one of
# jct-cert-keyfile-pwd or jct-cert-keyfile-stash must also be defined.
#jct-cert-keyfile = /var/pdweb/www-default/certs/pdjct.kdb
#jct-cert-keyfile-pwd = <password>
#jct-cert-keyfile-stash = /var/pdweb/www-default/certs/pdjct.sth

# When jct-ssl-reneg-warning-rate is set to a value greater than zero, WebSEAL
# will output a warning message if the SSL session renegotiation rate between
# junction servers and WebSEAL reaches this level or greater.  The value is
# specified as the number of renegotiations per minute.
jct-ssl-reneg-warning-rate = 0

# When use-new-stateful-on-error is set to yes WebSEAL will choose a new
# stateful junction server for a user if the current one fails.  When it is
# set to of no, WebSEAL will not choose a new stateful junction server for a
# user, instead it returns an error and future requests by the user will keep
# attempting to use this same stateful junction server (until the user
# restarts their browser or the junction server is deleted).
use-new-stateful-on-error = no

# When dont-reprocess-jct-404s = yes, WebSEAL will return 404 responses
# from junctions directly to clients.  When set to no, WebSEAL will
# assume the 404 is due to an unfiltered server relative link and
# will try to fix the problem by prepending a junction point to the URL
# in the request and sending the request again.  Setting this value to
# "no" provides backwards compatibility with TAM 5.1.
dont-reprocess-jct-404s = yes

# When pass-http-only-cookie-attr is set to 'yes' it will allow WebSEAL to pass
# the HttpOnly attribute from Junction Set-Cookie headers through to clients.
# The default behaviour (when set to 'no') is to discard the HttpOnly attribute.
pass-http-only-cookie-attr = no

# Compatibility option to also mangle junction names into domain set cookies.
# When several junctioned servers set domain cookies with the same name and
# same path, the browser will overwrite the values to the last one set.  This
# is the expected behavior for domain cookies, but before WebSEAL 5.1, it was
# possible to use WebSEAL cookie mangling to prevent it.  When set to "yes"
# the pre-5.1 behavior is enabled.
mangle-domain-cookies = yes

# Option to use the client's current IP address, rather than one cached in
# the credentials at authentication time, for the value passed in a header
# to junctions created with the -r option.
insert-client-real-ip-for-option-r = no


[query-contents]
#----------------------
# QUERY CONTENTS
#----------------------

# When this option is enabled then the query string sent to the query contents
# CGI on junctions will be a uri encoded UTF-8 string.  In addition a
# x-query-contents-uriencoded header is sent with the value "yes".  This
# option is to aid in supporting non-ASCII locales.
query-contents-uriencoded = no


[illegal-url-substrings]
#----------------------
# ILLEGAL URL SUBSTRINGS
#----------------------
# WebSEAL will block HTTP requests with any of the substrings from this
# list in the URL.
#
# Format is:
#     substring = <STRING>
#
substring = <script


[filter-url]
#----------------------
# DOCUMENT FILTERING
#----------------------
# URL attributes that the server will filter in responses from
# junctioned servers.
# Format is <TAG> = <ATTRIBUTE>
A = HREF
APPLET = CODEBASE
AREA = HREF
BASE = HREF
BGSOUND = SRC
BLOCKQUOTE = CITE
BODY = BACKGROUND
DEL = CITE
DIV = EMPTYURL
DIV = IMAGEPATH
DIV = URL
DIV = VIEWCLASS
EMBED = PLUGINSPAGE
EMBED = SRC
FORM = ACTION
FRAME = LONGDESC
FRAME = SRC
HEAD = PROFILE
IFRAME = LONGDESC
IFRAME = SRC
ILAYER = BACKGROUND
ILAYER = SRC
IMG = SRC
IMG = LOWSRC
IMG = LONGDESC
IMG = USEMAP
IMG = DYNSRC
INPUT = SRC
INPUT = USEMAP
INS = CITE
ISINDEX = ACTION
ISINDEX = HREF
LAYER = BACKGROUND
LAYER = SRC
LINK = HREF
LINK = SRC
OBJECT = CODEBASE
OBJECT = DATA
OBJECT = USEMAP
Q = CITE
SCRIPT = SRC
TABLE = BACKGROUND
TD = BACKGROUND
TH = BACKGROUND
TR = BACKGROUND
WM:CALENDARPICKER = FOLDERURL
WM:CALENDARPICKER = IMAGEPREVARROW
WM:CALENDARPICKER = IMAGENEXTARROW
WM:CALENDARVIEW = FOLDERURL
WM:MESSAGE = DRAFTSURL
WM:MESSAGE = URL
WM:NOTIFY = FOLDER
WM:REMINDER = FOLDER
?IMPORT = IMPLEMENTATION
# customer defined for Adobe flash param 
PARAM = VALUE

[filter-events]
#------------------------
# EVENT HANDLER FILTERING
#------------------------
# Specifies (TAG,EVENT-HANDLER) pairs that contain JavaScript requiring
# filtering of URL references.  Currently, only absolute URLs are
# supported.
#
# Format is <TAG> = <EVENT-HANDLER>
A = ONCLICK
A = ONDBLCLICK
A = ONMOUSEDOWN
A = ONMOUSEOUT
A = ONMOUSEOVER
A = ONMOUSEUP
AREA = ONCLICK
AREA = ONMOUSEOUT
AREA = ONMOUSEOVER
BODY = ONBLUR
BODY = ONCLICK
BODY = ONDRAGDROP
BODY = ONFOCUS
BODY = ONKEYDOWN
BODY = ONKEYPRESS
BODY = ONKEYUP
BODY = ONLOAD
BODY = ONMOUSEDOWN
BODY = ONMOUSEUP
BODY = ONMOVE
BODY = ONRESIZE
BODY = ONUNLOAD
FORM = ONRESET
FORM = ONSUBMIT
FRAME = ONBLUR
FRAME = ONDRAGDROP
FRAME = ONFOCUS
FRAME = ONLOAD
FRAME = ONMOVE
FRAME = ONRESIZE
FRAME = ONUNLOAD
IMG = ONABORT
IMG = ONERROR
IMG = ONLOAD
INPUT = ONBLUR
INPUT = ONCHANGE
INPUT = ONCLICK
INPUT = ONFOCUS
INPUT = ONKEYDOWN
INPUT = ONKEYPRESS
INPUT = ONKEYUP
INPUT = ONMOUSEDOWN
INPUT = ONMOUSEUP
INPUT = ONSELECT
LAYER = ONBLUR
LAYER = ONLOAD
LAYER = ONMOUSEOUT
LAYER = ONMOUSEOVER
SELECT = ONBLUR
SELECT = ONCHANGE
SELECT = ONFOCUS
TEXTAREA = ONBLUR
TEXTAREA = ONCHANGE
TEXTAREA = ONFOCUS
TEXTAREA = ONKEYDOWN
TEXTAREA = ONKEYPRESS
TEXTAREA = ONKEYUP
TEXTAREA = ONSELECT

[filter-schemes]
#
# URLs with these schemes are not filtered in responses from junctioned
# servers.
#
# Notes and Exceptions:
# - HTTP: and HTTPS: are internally handled and will be ignored if present in
#   this list.
# - Webseald will filter URLs with a scheme matching one in this list if
#   the response from a junctioned server has a BASE tag HREF URL scheme the
#   same as the URLs.
# - If a URL in the response from a junctioned server does not have a scheme
#   from this list, and the scheme is not HTTP: or HTTPS:, then webseald will
#   assume the URL is the same scheme as the junctioned server (HTTP: or
#   HTTPS:) with it's scheme missing.
# - The trailing ':' on scheme-name is optional, and if missing will be assumed.
#
# Format is:
#    scheme = <scheme-name>
#
scheme = file
scheme = ftp
scheme = mailto
scheme = news
scheme = telnet

[filter-content-types]
#
# Document content types that the server will filter in responses from
# junctioned servers.  If types besides text/html and text/vnd.wap.wml
# are added to this list then the option [script-filtering]script-filter
# should be set to 'yes'.
#
# Format is:
#    type = <type-name>
#
type = text/html
type = text/vnd.wap.wml

[filter-request-headers]
#
# HTTP headers to filter from the client request before sending to the
# back-end web server.  Note that this list is in addition to headers
# that WebSEAL will always filter, eg iv-user, iv-groups.
#
# Format is:
#   header = <header-name>
#
# The header name is case insensitive.
#
# The addition of "accept-encoding" to this list will prevent junctioned
# servers from returning compressed data to WebSEAL.  WebSEAL cannot
# filter compressed data.
header = accept-encoding


[script-filtering]
# When script filtering support is enabled, filtering of
# absolute urls between html <script> tags can be enabled.
#
# Only absolute URLs that exist as a complete string in the
# html schema:server format will be filtered.
script-filter = yes

# When script-filter is set to yes, enabling this flag will rewrite
# the absolute URLs with new absolute URLs that contain the protocol,
# host and port (if necessary) that represent how the user accessed
# the WebSEAL server.
rewrite-absolute-with-absolute = yes

# If another WebSEAL server has created a junction to this WebSEAL
# server using a WebSEAL to WebSEAL junction, set this to 'yes'
# to uniquely identify the cookie used for resolving unfiltered links.
hostname-junction-cookie = no


[preserve-cookie-names]
#
# WebSEAL will, by default, modify the names of cookies returned in
# responses from junctions created with the -j flag or listed in the
# Junction Mapping Table.  This is done to prevent naming conflicts with
# cookies returned from other junctions.
#
# If front end applications depend on the names of certain cookies, you
# you may want to disable this behavior for those cookies.  To do so, list
# the cookies in this stanza.
#
# Format is:
#   name = <cookie-name>

[credential-refresh-attributes]
#
# When a user's credential is refreshed, some attributes may be preserved
# by copying their values from the original credential into the new
# credential.  This stanza is used to control which attributes are preserved and
# which are refreshed. The attribute name patterns are case-insensitive wild
# card patterns that are used to select attributes.
#
# Order is important.  The first pattern which matches a given attribute
# will decide whether the attribute is preserved or refreshed.  If no
# pattern matches an attribute, then the attribute will be refreshed.
#
# Format is one of:
#   <attribute-name-pattern> = preserve
#   <attribute-name-pattern> = refresh
#
authentication_level = preserve
tagvalue_* = preserve

[gso-cache]
#----------------------
# GSO CACHE
#----------------------

# GSO cache configuration.
# gso-cache-enabled must be set to 'yes' before the other parameters
# will take effect.
gso-cache-enabled = no

# Cache size (number of entries)
gso-cache-size = 1024

# Cache entry lifetime (in seconds)
gso-cache-entry-lifetime = 900

# Cache entry idle timeout (in seconds)
gso-cache-entry-idle-timeout = 120


[ltpa-cache]
#----------------------
# LTPA CACHE
#----------------------

# LTPA cache configuration.
# The ltpa-cache-enabled entry must be set to 'yes' before
# the other ltpa parameters will take effect.
ltpa-cache-enabled = yes

# Cache size (number of entries)
ltpa-cache-size = 4096

# Cache entry lifetime (in seconds)
ltpa-cache-entry-lifetime = 3600

# Cache entry idle timeout (in seconds)
ltpa-cache-entry-idle-timeout = 600



###############################
# AUTHENTICATION
###############################

[ba]
#----------------------
# BASIC AUTHENTICATION
#----------------------

# Enable authentication using the Basic Authentication mechanism
# One of <http, https, both, none>
ba-auth = none

# Realm name.  This is the text that is displayed in the
# browser's dialog box when prompting the user for login data.
# By default, the string 'Access Manager' is used.
#basic-auth-realm = Access Manager

# IMPORTANT:
# 1) If forms authentication is enabled for a particular transport,
# the basic authentication settings for that transport will be ignored.
#
# 2) An appropriate authentication library must be configured to handle
# username/password authentication to complete this configuration.  Please
# refer to the "authentication mechanisms and libraries" subsection
# at the end of the authentication section.

[forms]
#----------------------
# FORMS
#----------------------

# Enable authentication using the forms authentication mechanism
# One of <http, https, both, none>
forms-auth = https

# IMPORTANT:
# 1) If forms authentication is enabled for a particular transport,
# the basic authentication settings for that transport will be ignored.
#
# 2) An appropriate authentication library must be configured to handle
# username/password authentication to complete this configuration.  Please
# refer to the "authentication mechanisms and libraries" subsection
# at the end of the authentication section.

# If a forms login request is received with either an empty user name or
# an empty password, then WebSEAL will return the login form without
# stating an error. If it is prefered that an error message is displayed,
# then set this value to true. In this case, WebSEAL will attempt to
# authenticate the user, and if the values have 0 length, the registry
# will return the appropriate error.
allow-empty-form-fields = false

[spnego]
#----------------------
# SPNEGO
#----------------------

# Enable authentication using the SPNEGO authentication mechanism
# One of <http, https, both, none>
spnego-auth = none

# IMPORTANT:
# 1) If forms authentication is enabled for a particular transport,
# the SPNEGO authentication settings for that transport will be ignored.
# 2) An appropriate authentication library must be configured to handle
# SPNEGO authentication to complete this configuration.  Please
# refer to the "authentication mechanisms and libraries" subsection
# at the end of the authentication section.

# SPNEGO authentication provides a principal name of the form
# "shortname@domain.com".  By default, TAM uses only the shortname
# as the TAM user-id.  If this parameter is set to yes, then TAM will
# include the domain as part of the TAM user-id.
#
# Example:
#   SPNEGO authentication provides principal name: user@example.com
#   If this parameter is no: the TAM user-id is "user"
#   If this parameter is yes: the TAM user-id is "user@example.com"
#
# Note that this configuration option has no effect if Active
# Directory Multi Domain is being used as the TAM user registry.  For
# AD MD, the domain name is always included as part of the TAM user-id.
use-domain-qualified-name = no

#
# List of kerberos service-principal-names (SPNs) for the server.  This is only
# used on UNIX platforms.  Each principal name must have the form
# HTTP@<hostname>, where hostname is the DNS name browsers will use to contact
# the web server.
#
# The SPN used for SPNEGO authentication depends on the whether the client is
# accessing a traditional WebSEAL junction or a transparent junction.  For
# traditional WebSEAL junctions, the first SPN in the list is always used.
# For transparent junctions, WebSEAL first searches for an SPN that matches
# the hostname the client used to connect to WebSEAL.  If no matching SPN is
# found, then the first SPN from the list will be used instead.
#
# In most cases the hostname used here should be fully qualified.
#
# Format is:
#   spnego-krb-service-name = HTTP@<host-one.example.com>
#   spnego-krb-service-name = HTTP@<host-two.example.com>
#   ...
#
spnego-krb-service-name =

#
# The path to the kerberos keytab file for the server.  This is only used
# on UNIX platforms.  The keytab file must contain keys for each of the
# SPNs used for SPNEGO authentication.
#
spnego-krb-keytab-file =

[token]
#----------------------
# TOKEN
#----------------------

# Enable authentication using the token authentication mechanism
# One of <http, https, both, none>
token-auth = none

# IMPORTANT:
# 1) If token authentication is enabled for a particular transport,
# the basic authentication settings for that transport will be ignored.
#
# 2) An appropriate authentication library must be configured to handle
# token authentication to complete this configuration.  Please
# refer to the "authentication mechanisms and libraries" subsection
# at the end of the authentication section.

[certificate]
#----------------------
# CERTIFICATE
#----------------------

# When to accept a certificate from HTTPS clients.  Options are:
#
# never            Never request a client certificate.
#
# required         Always request a client certificate.  Do not accept the
#                  connection if the client does not present a certificate.
#
# optional         Always request a client certificate.  If presented, use it.
#
# prompt_as_needed Certificates will only be prompted for and processed when
#                  certificate authentication is necessary (due to an ACL or
#                  POP check failure).
#
accept-client-certs = never

# IMPORTANT
# 1) If this is set to 'required', all other authentication
# settings are ignored for HTTPS clients
#
# 2) An appropriate authentication library must be configured to handle
# certificate authentication to complete this configuration.  Please
# refer to the "authentication mechanisms and libraries" subsection
# at the end of the authentication section.

#----------------------
# CERTIFICATE SSL ID CACHE SETTINGS
#----------------------
# A cache is necessary to store the SSL IDs of sessions that require a
# certificate exchange. This cache is only required when accept-client-certs =
# prompt_as_needed.

# The maximum number of concurrent entries in the Certificate SSL ID cache
# This corresponds to the number of concurrent certificate logins.
# Setting this to zero will allow unlimited cache size.
cert-cache-max-entries = 1024

# Maximum lifetime (in seconds) for an entry in the Certificate SSL ID cache.
# Setting this to zero allows entries the cache to fill without expiry until the
# cache contains the number of entries specified by cert-cache-max-entries.
# After that point, entries are expired according to a least recently used
# algorithm.
cert-cache-timeout = 120

# This controls the number of times WebSEAL will attempt to authenticate
# a client using certificates before assuming the client cannot provide
# a certificate.  A value of 5 is recommended because most browsers will
# maintain a maximum of 4 TCP connections to a Web server.  (Each attempt
# to prompt a client for certificate authentication will cause a TCP
# connection to be closed, and if all active TCP connections to a browser
# have been closed then the browser is probably unable to provide client
# certificate authentication.)  Values less than 2 or greater than 15 are
# not permitted.  This value is not used unless accept-client-certs =
# prompt_as_needed.
cert-prompt-max-tries = 5

# When disable-cert-login-page is set to "yes" the initial login form with
# an option to prompt for certificate will not be presented. WebSEAL will
# instead bypass this and directly prompt for the certificate.
disable-cert-login-page = no


[http-headers]
#----------------------
# HTTP HEADERS
#----------------------
#
# The use of HTTP headers for authentication is affected by the setting of
# require-mpa, see the comments above the require-mpa entry for more
# information.
#
# Enable authentication using http headers
# One of <http, https, both, none>
http-headers-auth = none

[auth-headers]
# HTTP headers to be used for authentication.
# List any HTTP headers which will contain authentication data .
# If the header is to be used to maintain session state, it must
# also be entered in the [session-http-headers] stanza.
#
# This list should contain no more than 20 entries.
# Do not include the colon (:)
#
# Syntax:
# header = header-name
#
#header = entrust-client

[auth-cookies]
# HTTP cookies to be used for authentication.
# List any HTTP cookies which will contain authentication data.
#
# The use of HTTP cookies for authentication is affected by the setting of
# require-mpa, see the comments above the require-mpa entry for more
# information.
#
# This list should contain no more than 20 entries.
#
# Syntax:
# cookie = cookie-name
#
#cookie = entrust-client

# IMPORTANT
# An appropriate authentication library must be configured to handle
# http header authentication to complete this configuration.  Please
# refer to the "authentication mechanisms and libraries" subsection
# at the end of the authentication section.

[ipaddr]
#----------------------
# IP ADDRESS
#----------------------

# Enable authentication using the client's IP address
# One of <http, https, both, none>
ipaddr-auth = none

# IMPORTANT
# An appropriate authentication library must be configured to handle
# IP address authentication to complete this configuration.  Please
# refer to the "authentication mechanisms and libraries" subsection
# at the end of the authentication section.

[authentication-levels]
#----------------------
# STEP UP
#----------------------

# authentication levels
#
# Syntax:
# level = <method-name>
#
# Valid method names are:
#   unauthenticated
#   password
#   token-card
#   ssl
#   ext-auth-interface
#
level = unauthenticated
level = password

# IMPORTANT
# 1) You cannot step up to an authentication method that is not enabled.
#    For example, you must enable either BA or forms authentication
#    before 'level = password' in this list will have any effect.
#
# 2) POP settings are required to enable step-up authentication.
#    Please see the administration guide for details.

[step-up]
#
# The following entry determines, in the event of a step-up operation,
# whether the new user ID must match the user ID from the previous
# authentication. In the situation where verify-step-up-user = yes,
# and the user IDs do not match, an error will be presented to the user.
#
verify-step-up-user = yes

#
# The following entry allows the administrator to control what login prompts
# are shown to users when they request a resource protected by a stepup policy.
#
# If show-all-auth-prompts = yes, the login prompts for all configured
# authentication methods are shown.
#
# If show-all-auth-prompts = no, only the login prompt for the method matching
# the required authentication level is shown.
#
show-all-auth-prompts = no

[mpa]
#----------------------
# MULTIPLEXING PROXY AGENTS
#----------------------

# Support Multiplexing Proxy Agents (yes/no)
mpa = no

[cdsso]
#----------------------
# CDSSO
#----------------------

# Accept cdsso tokens
# This will require that an authentication module is specified for
# 'sso-consume' in the 'authentication-mechanisms' stanza.
# One of <http, https, both, none>
cdsso-auth = none

# Generate cdsso tokens.
# This will require that an authentication module is specified for
# 'sso-create' in the 'authentication-mechanisms' stanza.
# One of <http, https, both, none>
cdsso-create = none

# Single sign on authentication token lifetime (in seconds)
# This mitigates clock skew between separate WebSEAL servers.
authtoken-lifetime = 180

# cdsso-argument
# This is the name of the argument containing the CDSSO token in a query string
# of a request. This is used to identify incoming requests containing
# CDSSO authentication information.
#
# Syntax:
# cdsso-argument = <argument name>
# For standard CDSSO, use PD-ID
cdsso-argument = PD-ID

# Specify if UTF-8 encoding should be used in the strings within the cdsso
# token. UTF-8 should be used when user names or credential attributes in the
# token are not encoded in the same code page as the WebSEAL server is using.
# Set to "no" if your tokens need to interoperate with environments that
# use local code page. This option only affects CDSSO tokens created and
# consumed by the default SSO create and consume libraries.
use-utf8 = yes

# When an SSO token is generated, a call is made to the Cross Domain Mapping
# Framework (CDMF) API to determine the extended attributes that must be
# encoded into the token so that the user can be correctly mapped across the
# SSO authentication.  The propagate-cdmf-errors parameter determines
# whether the failure of the cdmf_get_usr_attributes call will cause token
# creation as a whole to fail.  If propagate-cdmf-errors is set to "no"
# (default), a default attribute list will be generated if the CDMF fails
# and token creation will proceed without error.  However, if
# propagate-cdmf-errors is set to "yes", token creation will be aborted if
# the CDMF fails.
propagate-cdmf-errors = no

# cdsso-argument (PD-ID) and PD-REFERER query string arguments can be
# passed onto junctions.  When this option is set to "yes" these will be
# removed from the URI before passing the request onto the junction.
clean-cdsso-urls = no


[cdsso-peers]
# Peers that are participating in Cross Domain Single Sign On (CDSSO)
#
# Syntax:
# <fully qualified host name> = <key file location>

[cdsso-token-attributes]
#
# Credential attributes to include in CDSSO authentication tokens.
#
# This stanza defines the sets of attributes to be included in
# CDSSO authentication tokens, specified on a per-peer or
# per-domain basis.  This processing only takes place if the
# default SSO token creation and consumption libraries are
# in use.
#
# Credential attributes matching the patterns specified in this stanza
# for a target host or domain are included in CDSSO authentication tokens
# constructed for that target host or domain.  Only a single value for
# each attribute is used, and only string values are supported.  Other
# types of credential attribute values will be ignored.
#
# Patterns can be specified using shell-style wildcards.
#
# The format of these entries is:
#
#    <domain-name> = <pattern-1>, <pattern-2>, ..., <pattern-n>
#
# For example:
#
#    [cdsso-token-attributes]
#    ibm.com    = attrprefix_*, *name*
#    tivoli.com = *_attrsuffix, some_exact_attribute
#
# A default set of attributes can be configured with a '<default>'
# entry in this stanza.  This set of attributes is used when there
# is no other entry matching a particular target host.  If the '<default>'
# entry is not present, then no attributes will be included in tokens
# by default.
#
# If no credential attributes are required in CDSSO authentication tokens,
# then this stanza can remain empty.
#

[cdsso-incoming-attributes]
#
# Attributes to accept from incoming CDSSO authentication tokens.
#
# This stanza defines the sets of attributes to be accepted and rejected
# from incoming CDSSO authentication tokens.  Unlike the outgoing
# attributes configuration, incoming attributes cannot be configured
# on a per-peer or per-domain basis.  Only one set of attribute patterns
# can be configured, and these patterns will be applied to incoming
# tokens regardless of source.  This processing only takes place if the
# default SSO token creation and consumption libraries are
# in use.
#
# The format of entries in this stanza is:
#
#  <attribute pattern> = <preserve|refresh>
#
# Attributes in CDSSO authentication tokens that match a 'refresh' entry
# will be removed from the token before the CDMF library is called
# to map the remote user into the local domain.  Attributes matching
# a 'preserve' entry, or matching none of the entries, will be kept.
# If no entries are configured, then all attributes will be kept.
#

[failover]
#----------------------
# FAILOVER
#----------------------

# Accept failover cookies
# One of <http, https, both, none>
failover-auth = none

# Key file for failover cookie encryption
# The cdsso_key_gen utility must be used to create this file
# failover-cookies-keyfile =

# Number of minutes that failover cookie contents are valid
failover-cookie-lifetime = 60

# Enable the failover cookie for the domain
# This allows the cookie to send back to any server within
# the same domain as WebSEAL.
enable-failover-cookie-for-domain = no

# Specify if UTF-8 encoding should be used in the strings within the failover
# cookie. UTF-8 should be used when user names or credential attributes in the
# cookie are not encoded in the same code page as the WebSEAL server is using.
# Set to "no" if your cookies need to interoperate with environments that
# use local code page.
use-utf8 = yes

# The integer number of seconds that pass between updating the failover cookie's
# last activity timestamp. With each request, if n seconds have passed since the
# last cookie update, and last activity timestamps are configured to be
# inserted in failover cookies, another update will occur.
# A zero value will cause the last activity timestamp in the failover cookie
# to be updated with each request.
# Negative values will cause the last activity timestamp in the cookie to never
# be updated.
failover-update-cookie = -1

# Enable validation of session lifetime and activity timestamp attributes of
# incoming failover cookies. Settings are:
#   no:  The timestamp is not required, but if it exists and is invalid,
#        failover authentication will fail.
#   yes: If the timestamp is invalid or missing, failover authentication
#        will fail.
failover-require-lifetime-timestamp-validation = no
failover-require-activity-timestamp-validation = no

# Include the user's session ID as an attribute of the failover cookie to
# enable non-sticky failover. Non-sticky failover allows users to authenticate
# to multiple WebSEAL replicas without being issued new session cookies for
# each failover occurrence.
#
# To enable non-sticky failover functionality, the following options must
# be set; WebSEAL will report a startup error and fail to start if any
# of the settings below are incorrect.
#   - In [session], set ssl-id-sessions = no
#   - Enable the following settings:
#     - In [failover-add-attributes],
#           tagvalue_failover_amweb_session_id = add
#     - In [failover-restore-attributes],
#           tagvalue_failover_amweb_session_id = preserve
#     - In [credential-refresh-attributes],
#           tagvalue_failover_amweb_session_id = preserve
#     - Wildcard patterns in the above 3 settings are allowed.
failover-include-session-id = no

# Resend the failover cookie if it is missing from the request
# In certain environments clients may "lose" the failover cookie.
# If this configuration option is set to yes then WebSEAL will
# automatically resend the failover cookie if the client does
# not present it.
reissue-missing-failover-cookie = no

[failover-add-attributes]
# Specify which attributes from the credential to store in a failover cookie.
#
# The format for attributes to add to the failover cookie is:
#    <attribute pattern> = add
# where <attribute pattern> is a case-insensitive wild card pattern.
#
# The AUTHENTICATION_LEVEL and AZN_CRED_AUTH_METHOD attributes
# will always be added to the failover cookie, regardless of the
# entries in this stanza.
#
#tagvalue_failover_amweb_session_id = add

[failover-restore-attributes]
# Specify which attributes to put in the new credential when recreating a
# credential from a failover cookie.  This stanza is used to control which
# attributes are preserved and which are refreshed.

# The attribute name pattern are case-insensitive wild card patterns that are
# used to select attributes.
#
# Order is important. Rules that appear earlier in either failover-attribute
# stanza take precedence over those that appear later in the stanza. If an
# attribute does not match any of the rules, it will not be considered for
# special handling.
#
# The format for adding attributes from the cookie (if present) to the new
# credential is:
#   <attribute pattern> = preserve
#
# The format for explicitly ignoring failover cookie attributes (default
# behavior) for addition to the new credential is:
#   <attribute pattern> = refresh
#
# All failover cookie attributes will be ignored (for the purpose of
# adding them to a new credential) unless specified by a 'preserve' line.
#
#tagvalue_failover_amweb_session_id = preserve

[e-community-sso]
#----------------------
# e-COMMUNITY SSO
#----------------------
# Participate in e-community single sign on
# One of <http, https, both, none>
e-community-sso-auth = none

# The e-community name. This needs to match any vouch-for tokens or
# e-community cookies that are received.
# e-community-name = <name>

# Master authentication server settings. If is-master-authn-server
# is set to "yes " then this server will accept vouch-for requests from
# other WebSEAL instances whose domain keys are listed in the
# [e-community-domain-keys] stanza.
# is-master-authn-server = <yes/no>

# If is-master-authn-server is set to "no" then this value needs
# to be specified. If a local domain login has not already been performed then
# authentication attempts will be routed through this machine,
# which will need to vouch for a users identity.
# The domain key for the master-authn-server needs to be listed in the
# [e-community-domain-keys] stanza.
# master-authn-server = <server name>

# If e-community-sso-auth permits use of the HTTP protocol and
# the master-authn-server listens for HTTP requests on a port other
# than the standard HTTP port (port 80) then this non-standard port
# needs to be configured here. This parameter is ignored if this server
# is the master authentication server.
#
# master-http-port = <port>

# If e-community-sso-auth permits use of the HTTPS protocol and
# the master-authn-server listens for HTTPS requests on a port other
# than the standard HTTPS port (port 443) then this non-standard port
# needs to be configured here. This parameter is ignored if this server
# is the master authentication server.
#
# master-https-port = <port>


# vouch-for token lifetime in seconds. This needs to take into account clock
# skew between participants.
vf-token-lifetime = 180

# vouch-for URL designator
# This specifies the start of a URL relative to the server root. This is used
# to construct vouch-for requests by participating ECSSO servers, and to
# distinguish requests for vouch-for information from other requests by the
# MAS.
#
# '/pkmsvouchfor' is used by default
# vf-url = /pkmsvouchfor

# vouch-for argument
# This is the name of the vouch-for token (as an argument name) contained in
# a vouch-for reply.
# This is used to construct vouch-for replies by the MAS, and to distinguish
# incoming requests as ones with vouch-for information by participating ECSSO
# servers.
#
# 'PD-VF' is used by default
# vf-argument = PD-VF

# ecommunity cookie domain.  If not set WebSEAL will use the domain from the
# automatically determined hostname (or web-host-name if specified).
# ec-cookie-domain = <domain>

# ecommunity cookie lifetime, in minutes.
ec-cookie-lifetime = 300

# Enable or disable unauthenticated access with ECSSO.
# When set to no, every initial ECSSO request will require authentication.
# Default value is yes.
ecsso-allow-unauth = yes

# Specify if UTF-8 encoding should be used in the strings within the vouch-for
# token. UTF-8 should be used when user names or credential attributes in the
# token are not encoded in the same code page as the WebSEAL server is using.
# Set to "no" if your tokens need to interoperate with environments that
# use local code page.
use-utf8 = yes

# When an SSO token is generated, a call is made to the Cross Domain Mapping
# Framework (CDMF) API to determine the extended attributes that must be
# encoded into the token so that the user can be correctly mapped across the
# SSO authentication.  The propagate-cdmf-errors parameter determines
# whether the failure of the cdmf_get_usr_attributes call will cause token
# creation as a whole to fail.  If propagate-cdmf-errors is set to "no"
# (default), a default attribute list will be generated if the CDMF fails
# and token creation will proceed without error.  However, if
# propagate-cdmf-errors is set to "yes", token creation will be aborted if
# the CDMF fails.
propagate-cdmf-errors = no

# If an unauthenticated request is made with POST data, set to yes,
# this option will allow that data to be cached while the e-community
# master authenticates the user. If the option is set to no, request
# data will be lost.
cache-requests-for-ecsso = yes

# Authentication errors returned by the master-authn-server in vouch-for
# tokens are not propagated to the ERROR_CODE and ERROR_TEXT macros used
# by facilities such as local response redirect.  Setting this option to
# "yes" will propagate the errors.
ecsso-propagate-errors = no

# When the following option is set to "yes" this WebSEAL instance is stopped
# from generating or using eCommunity Cookies. In addition, if this instance
# is not acting as the MAS, WebSEAL will not respond to vouch-for requests.
# To be effective, all machines participating in the eCommunity should have
# this value set the same.
disable-ec-cookie = no

# When the following option is set to "yes" on the WebSEAL instance acting as
# the MAS, the MAS will respond locally to login failures, rather than
# redirecting the user back to the requesting slave WebSEAL instance.
handle-auth-failure-at-mas = no


[e-community-domain-keys]
# Keys for any domains that are participating in the e-community, including
# the domain in which the WebSEAL server is running.  These are shared on a
# pair-wise-by-domain basis.  The format of these entries is:
# <domain name> = <key file>

[e-community-domains]
# These are the eCommunity cookie domains used by Virtual Host junctions.  The
# domain used by a particular Virtual Host junction will be chosen by finding
# the longest domain in the table that matches the virtual hostname.
# Each of these domains must also have a corresponding table of keys defined
# by creating a stanza of the format [e-community-domain-keys:<domain>].
# The format these entries is:
# name = <domain>

#[e-community-domain-keys:<domain>]
# Keys for any domains that are participating in the e-community, including
# the domain in which the Virtual Host junction is running.  These are shared
# on a pair-wise-by-domain basis.  The format of these entires is:
# <domain name> = <key file>

[ecsso-token-attributes]
#
# Credential attributes to include in eCSSO vouch-for tokens.
#
# This stanza defines the sets of attributes to be included in
# eCSSO vouch-for tokens, specified on a per-peer or
# per-domain basis.  This processing only takes place if the
# default SSO token creation and consumption libraries are
# in use.
#
#
# Credential attributes matching the patterns specified in this stanza
# for a target host or domain are included in eCSSO vouch-for tokens
# constructed for that target host or domain.  Only a single value for
# each attribute is used, and only string values are supported.  Other
# types of credential attribute values will be ignored.
#
# Patterns can be specified using shell-style wildcards.
#
# The format of these entries is:
#
#    <domain-name> = <pattern-1>, <pattern-2>, ..., <pattern-n>
#
# For example:
#
#    [ecsso-token-attributes]
#    ibm.com    = attrprefix_*, *name*
#    tivoli.com = *_attrsuffix, some_exact_attribute
#
# A default set of attributes can be configured with a '<default>'
# entry in this stanza.  This set of attributes is used when there
# is no other entry matching a particular target host.  If the '<default>'
# entry is not present, then no attributes will be included by default.
#
# If no credential attributes are required in eCSSO vouch-for tokens,
# then this stanza can remain empty.
#


[ecsso-incoming-attributes]
#
# Attributes to accept from incoming eCSSO vouch-for tokens.
#
# This stanza defines the sets of attributes to be accepted and rejected
# from incoming eCSSO vouch-for tokens.  Unlike the outgoing
# attributes configuration, incoming attributes cannot be configured
# on a per-peer or per-domain basis.  Only one set of attribute patterns
# can be configured, and these patterns will be applied to incoming
# tokens regardless of source.  This processing only takes place if the
# default SSO token creation and consumption libraries are
# in use.
#
# The format of entries in this stanza is:
#
#  <attribute pattern> = <preserve|refresh>
#
# Attributes in eCSSO vouch-for tokens that match a 'refresh' entry
# will be removed from the token before the CDMF library is called
# to map the remote user into the local domain.  Attributes matching
# a 'preserve' entry, or matching none of the entries, will be kept.
# If no entries are configured, then all attributes will be kept.
#


[reauthentication]
#----------------------
# REAUTHENTICATION
#----------------------

# Prompt users to reauthenticate if their entry in the WebSEAL
# credential cache has timed out due to inactivity
#
# If set to 'no', entries in the cache will be deleted when the
# inactivity timeout is reached.
#
# If set to 'yes', entries in the cache will be retained until the
# cache lifetime timeout is reached.  If the inactivity timeout has
# been reached and the client makes another request before the cache
# lifetime timeout is reached, they will be prompted to reauthenticate.
reauth-for-inactive = no

# Reset the lifetime timer for WebSEAL credential cache entries
# following successful reauthentication.
# This applies to reauthentication resulting from either inactivity or
# from security policy
reauth-reset-lifetime = no

# Time in seconds that the credential cache entry lifetime timer should
# be extended to allow clients to complete a reauthentication.
# A value of 0 indicates that the lifetimer timer will not be extended.
# This applies to any clients who are required to log in who
# already have an existing cache entry, including clients stepping up and
# clients performing reauthentication resulting from either inactivity or
# from security policy.
reauth-extend-lifetime = 0

# When the user registry policy setting max-login-failures is set and the
# maximum number of reauthentication login failures is reached the login
# session will be terminated if this option is enabled.
terminate-on-reauth-lockout = yes

# This configuration entry will control whether a different authentication
# level/mechanism is allowed during a reauthentication operation.  Please
# note that if the configuration option is set to 'yes' the credential
# could change during the lifetime of the session, potentially more than
# once.
#
# The default value, if no entry is specifed, is 'no'.
reauth-at-any-level = no

[eai]
#----------------------
# EXTERNAL AUTHENTICATION INTERFACE
#----------------------

# Enable EAI authentication. No other EAI parameters will take effect
# if this is set to 'none'.
#
# One of <http, https, both, none>
eai-auth = none

# IMPORTANT
# An appropriate authentication library must be configured to handle
# EAI authentication to complete this configuration.  Please
# refer to the "authentication mechanisms and libraries" subsection
# at the end of the authentication section.

# EAI HEADER NAMES

# If eai-auth is not 'none', and WebSEAL has received a trigger URL
# in a request, WebSEAL will examine the corresponding server response for
# the following headers.  These are the headers that will contain authentication
# data used to authenticate the user.

# EAI PAC header names
eai-pac-header = am-eai-pac
eai-pac-svc-header = am-eai-pac-svc

# EAI USER ID header names
eai-user-id-header = am-eai-user-id
eai-auth-level-header = am-eai-auth-level
eai-xattrs-header = am-eai-xattrs

# EAI COMMON header names
eai-redir-url-header = am-eai-redir-url

# RETAIN EAI SESSION
# If an already-authenticated EAI client authenticates via an EAI a second
# time, the existing session and cache entry are completely replaced by
# default.  If retain-eai-session = yes, then the existing session and
# cache entry will be retained, and the credential and relevant data will
# be updated in the existing cache entry.
retain-eai-session = no

# EAI TRIGGER URLS
[eai-trigger-urls]
# If eai-auth is not 'none', then WebSEAL will examine the URLs of incoming
# requests to determine if they match one of the entries in this list.
# If they do, then WebSEAL will examine the corresponding server response to
# determine if it contains authentication data.
#
# NOTE: If eai-auth is not 'none', there must be at least one entry in this list
#
# The URL string patterns are case-insensitive wild card patterns.
#
# Format for regular WebSEAL junctions is:
#   trigger = <URL pattern of EAI server response>
#
# Format for Virtual Host junctions is:
#   trigger = HTTP[S]//virtual-host-name[:port]/<URL pattern of EAI server response>
#
# For Virtual Host junctions to match a trigger they must also have the same
# protocol (HTTP[S] = TCP/SSL) and have the same virtual-host-name & port as
# the trigger.  The virtual-host-name match is case-insensitive.
#
# Regular WebSEAL junction triggers are not used by Virtual Host junctions.
# Virtual Host junction triggers are not used by regular WebSEAL junctions.



[authentication-mechanisms]
#----------------------
# AUTHENTICATION MECHANISMS AND LIBRARIES
#----------------------
# List of supported authentication mechanisms and
# their associated shared libraries
# Uncomment the line and supply the full path to a library to
# enable a mechanism.

# Username/Password - such as Basic Authentication or Forms
#passwd-cdas       = <passwd-cdas-library>
#passwd-ldap       = <passwd-ldap-library>
#passwd-uraf       = <uraf-authn-library>
passwd-ldap = /opt/PolicyDirector/lib/libldapauthn.a & -cfgfile [/opt/pdweb/etc/webseald-default.conf]
cert-ldap = /opt/PolicyDirector/lib/libcertauthn.a & -cfgfile [/opt/pdweb/etc/webseald-default.conf]

# Token
#token-cdas        = <token-cdas-library>

# Certificates
#cert-ssl          = <cert-ssl-library>

# HTTP Header or IP Address
#http-request      = <http-request-library>

# SSO Creation
#sso-create             = <sso-creation-library>

# SSO Consumption
#sso-consume            = <sso-consumption-library>

# SPNEGO
#kerberosv5             = <stli-authn-library>

# Password-Strength
#passwd-strength   = <passwd-strength-library>

# Extended Attributes
#cred-ext-attrs    = <cred-ext-attrs-library>

# Switch User
#su-password       = <su-password-library>
#su-token-card     = <su-token-card-library>
#su-certificate    = <su-certificate-library>
#su-http-request   = <su-http-request-library>
#su-cdsso          = <su-cdsso-library>
#su-kerberosv5     = <su-kerberosv5-library>

# Failover
#failover-password           = <failover-password-library>
#failover-token-card         = <failover-token-card-library>
#failover-certificate        = <failover-certificate-library>
#failover-http-request       = <failover-http-request-library>
#failover-cdsso              = <failover-cdsso-library>
#failover-kerberosv5         = <failover-kerberosv5-library>
#failover-ext-auth-interface = <failover-ext-auth-interface-library>

# Post Password Change Processing
#post-pwdchg-process     = <post-pwdchg-process-library>

# EXTERNAL AUTHENTICATION INTERFACE
#ext-auth-interface       = <ext-auth-interface-library>

[ssl-qop]
#----------------------
# SSL QUALITY OF PROTECTION MANAGEMENT
#----------------------

# Enable/Disable SSL Quality of Protection management
ssl-qop-mgmt = no

# Legal cipher values for qop in the following stanzas are:
# NONE, ALL, NULL, DES-56, FIPS-DES-56, DES-168, FIPS-DES-168,
# RC2-40, RC2-128, RC4-40, RC4-56, RC4-128, AES-128, AES-256
#
# Notes:
# - NONE = No SSL connection allowed.
# - NULL = Unencrypted SSL connection allowed.
# - ALL = All types of SSL connections allowed.
# - There maybe multiple cipher/MAC made available to the connection
#   for a given qop cipher selection.  These will still have the same
#   encryption bit strength, just different MAC methods (SHA1 or MD5).
# - RC2-128 is only available with SSLv2. If it is the only cipher selection
#   webseald will disable SSLv3 and TLSv1 for the affected connection.
# - NULL, FIPS-DES-56, FIPS-DES-168, RC4-56, AES-128, and AES-256 are
#   only available with SSLv3 and TLSv1.  If they are the only ciphers
#   available to a given connection, SSLv2 will be disabled for the
#   affected connection.
# - AES Support is determined automatically by GSKit based on
#   the base-crypto-library setting.  AES-128 and AES-256 are only
#   available if AES Support is enabled by GSKit, else they will be
#   ignored.
# - FIPS-DES-56 and FIPS-DES-168 are only available when
#   fips-mode-processing is enabled (set to yes), otherwise they will
#   be ignored.

# host ssl qop
[ssl-qop-mgmt-hosts]

# networks ssl qop
[ssl-qop-mgmt-networks]

# default ssl qop
[ssl-qop-mgmt-default]
default = ALL


[session]
##################################
# SESSION
##################################

#----------------------
# SESSION CACHE SETTINGS
#----------------------

# The maximum number of concurrent entries in the credential cache
# This corresponds to the number of concurrent logins.  The value
# WebSEAL actually uses might be slightly more than what is specified here.
# Refer to the WebSEAL Administration Guide for details.
max-entries = 4096

# Maximum lifetime (in seconds) for an entry in the credential cache
# Setting this to zero allows entries the cache to fill without expiry until the
# cache contains the number of entries specified by max-entries. After that
# point, entries are expired according to a least recently used algorithm.
timeout = 3600

# Lifetime (in seconds) of inactive entries in the credential cache.
# To disable, set to 0.
inactive-timeout = 600

#----------------------
# SSL CLIENT SESSIONS
#----------------------

# Use the SSL ID to maintain a user's HTTPS login session.
ssl-id-sessions = no

#----------------------
# SHARING SESSIONS
#----------------------

# Use the same session for SSL and HTTP clients.  This means that a client
# having authenticated via HTTP will still be authenticated when connecting
# via HTTPS and vice versa.
#
# A consequence of setting this to 'yes' is that the ssl-id-sessions
# parameter will be ignored, because HTTP clients cannot use the SSL ID
# to maintain sessions.
use-same-session = no

#----------------------
# SESSION COOKIE NAMES
#----------------------

# These parameters control the names of the cookies WebSEAL will use for
# session IDs.  The names of the cookies should be alphanumeric, and each
# cookie must have a different name.  To use the same cookie for both TCP
# and SSL connections use the [session]use-same-session configuration
# option.
tcp-session-cookie-name = PD-H-SESSION-ID
ssl-session-cookie-name = PD-S-SESSION-ID

#----------------------
# SENDING SESSION COOKIES
#----------------------

# Send the WebSEAL cookies with every response.  Use in environments where:
#   1) Cookies are used to maintain sessions with clients
#   2) Applications place many in-memory cookies per domain on client systems.
# This helps ensure that the WebSEAL cookies remain in the browser memory in
# such environments.
resend-webseal-cookies = no

# Remove the WebSEAL session cookie on logout
logout-remove-cookie = no

# Should the original session cookie be sent to junctioned Web servers along
# with the current session cookie?  This configuration entry will only
# take effect if the current session cookie is being sent down the
# junction, as defined by the '-k' junction create flag.  The name used for
# this session cookie will be based on the name of the current session cookie,
# appended with '_2'.  For example, if tcp-session-cookie-name is set as
# 'PD-H-SESSION-ID', the name of the original session cookie will be
# 'PD-H-SESSION-ID_2'.
send-constant-sess = no

#----------------------
# USER SESSION IDS
#----------------------
# Enable/disable the creation and handling of user session ids.
user-session-ids = no

# Include the replica set name in the user session ID.  If set to "yes"
# then the user-session-id will include the replica set.  If set to "no"
# then WebSEAL will not include the replica set in the user-session-id,
# and will assume that all user-sessions specified in the "terminate session"
# command belong to the standard junction replica set.
user-session-ids-include-replica-set = yes

#----------------------
# DISTRIBUTED SESSION MANAGEMENT
#----------------------
# These entries together with the "dsess" stanza control how WebSEAL uses the
# SMS to store and manage sessions.

# Enable/disable use of the SMS.  If this is set to yes the "dsess" stanza
# must have information about how to communicate with the SMS.
dsess-enabled = no

# If set to "yes", then WebSEAL will use the SMS to make sure that users
# do not have more sessions than the max-concurrent-web-sessions policy
# allows.  If set to "no" WebSEAL will not enforce the policy.  This
# entry is ignored unless WebSEAL is using the SMS for session storage.
enforce-max-sessions-policy = yes

# If set to "yes" then WebSEAL will prompt users before automatically
# displacing old sessions using the same user-id.  If set to "no" then
# WebSEAL will automatically log out the old sessions.  This entry
# only applies when the max-concurrent-web-sessions policy for the user
# is set to 'displace'.
prompt-for-displacement = yes

# If set to "yes", then WebSEAL will notify the SMS when login failures
# occur so that users can be shown a history of their last successful
# and failed logins.
register-authentication-failures = no

# The frequency with which WebSEAL will update the session last
# access time at the SMS.  This value is only used if reauth-for-inactive
# is set to yes.  Smaller values offer more accurate inactivity
# timeout tracking, at the expense of sending updates to the SMS
# more frequently.  Values of less than 1 second are not permitted.
#
# Example: if inactive-timeout is 600 seconds and
# dsess-last-access-update-interval is 60 seconds, the user's session may
# be flagged as 'inactive' at the SMS anywhere between 540 seconds and
# 600 seconds after their last access to the WebSEAL server.
dsess-last-access-update-interval = 60

# The SMS replica set to use for sessions created when users access standard
# WebSEAL junctions.  Virtual host junctions will use the replica set
# specified with the "-z" option when the virtual host junction is
# created.
standard-junction-replica-set = default

# Require Multiplexing Proxy Agent for HTTP Header Session Keys and
# HTTP Header authentication tokens.
#
# The use of an HTTP header as a session identifier or as an authentication
# token carries a measure of risk that the header can be spoofed or stolen.
# It is strongly recommended that headers only be accepted when proxied
# through an authenticated channel.  A 'yes' setting means that HTTP headers
# will not be valid session keys or authentication tokens unless received via
# an MPA.  Please see the WebSEAL Administration Guide for more details
# regarding MPAs.
require-mpa = yes


[session-http-headers]
#----------------------
# HTTP HEADER SESSION KEYS
#----------------------
#
# List any HTTP headers which will contain a session key on a per-transport
# basis.  The same header can be listed for both transports if desired.
#
# Only the first matching header found in a request will be used.
#
# If ssl-id-sessions = yes, then this stanza will be ignored.
# The exception to this is if MPA support is enabled.
#
# WebSEAL will first look for a session cookie before continuing to look
# for HTTP headers from this list.
#
# The use of http headers as session keys is affected by the setting of
# require-mpa, see the comments above the require-mpa entry for more
# information.
#
# This list should contain no more than 20 entries per transport.
# Do not include the colon (:)
#
# Format is one of:
#   <header> = http
#   <header> = https

[replica-sets]
##################################
# REPLICA SETS
##################################
# If WebSEAL is configured to use the SMS for session storage the
# WebSEAL server will join each of the replica sets listed in this
# stanza.  The entries listed here must be replica sets configured
# on the SMS.

# Example entries:
# replica-set = <replica-set-one>
# replica-set = <replica-set-two>

[dsess]
##################################
# DISTRIBUTED SESSIONS
##################################

# The maximum number of session ID's that are pre-allocated within the replica
# set.  This configuration parameter will not affect WebSEAL performance
# and should not be modified.

dsess-sess-id-pool-size = 125

#
# The name of the SMS cluster to which this SMS server belongs.
# This field must be defined and reference an existing dsess-cluster stanza
# qualified by the value of this entry.
#
#
# dsess-cluster-name = dsess

[dsess-cluster]

#
# The dsess-cluster stanza contains all of the defaults for a definition of
# a cluster of SMS (distributed session) servers.
#

#
# A specification for a single SMS server which is a member of this
# cluster.  Values for this entry are defined as follows:
#
#       {[0-9],}<URL>
#
# Where the first digit (if present) represents the priority of the server
# within the cluster (9 being the highest, 0 being lowest).  If the priority
# is not specified, a priority of 9 is assumed.  The <URL> can be any
# well-formed HTTP or HTTPS URL.
#
# Multiple server entries can be specified for failover and load balancing
# purposes.  The complete set of these server entries defines the
# membership of the cluster.
#
# server = 9,http://sms.example.com/DSess/services/DSess


#
# The length of time to maintain a connection to the web service while
# waiting for session broadcast events.
#

response-by = 60

#
# The maximum number of cached handles, used when communicating with the SMS.
#

handle-pool-size = 10

#
# The length of time, in seconds, before an idle handle will be removed
# from the handle pool cache.
#

handle-idle-timeout = 240

#
# The length of time, in seconds, to wait for a response from the SMS.
#

timeout = 240

#
# The following SSL entries are optional and are only required if:
#    1. At least one server entry indicates that SSL is to be used (i.e.
#       starts with https:)
#    2. A certificate is required other than that which is used by this server
#       when communicating with the policy server (details of the
#       default certificate can be found in the [ssl] stanza of this
#       configuration file.
#
# If these entries are required and not found within the [dsess-cluster]
# stanza, the default [ssl] stanza will be searched.
#
#
# The name of the key database file which houses the client certificate to be
# used.
#
# ssl-keyfile =

#
# The name of the password stash file for the key database file.
#
# ssl-keyfile-stash =

#
# The label of the client certificate within the key database.
#
# ssl-keyfile-label =

#
# This configuration entry specifies the DN of the server (obtained from the
# server SSL certificate) which will be accepted.  If no entry is configured
# all DN's will be considered to be valid.  Multiple DN's can be specified by
# including multiple configuration entries of this name.
#
# ssl-valid-server-dn =

#
# The entry controls whether FIPS communication is enabled with the SMS or
# not.  If no configuration entry is present the global FIPS setting (as
# determined by the TAM policy server) will take effect.
#
# ssl-fips-enabled =


[dsess-cluster:dsess]

#
# This stanza will define the cluster of SMS servers associated with the
# configuration defined in the default [dsess] stanza (above).
#
# See the [dsess-cluster] stanza above for a definition of valid entries
# and their associated values.
#


[session-cookie-domains]
##################################
# SESSION COOKIE DOMAINS
##################################

# Normally WebSEAL session cookies are 'host' cookies which browsers
# only return to the host that originally set them.  This stanza
# can be used to configure 'domain' session cookies that may be sent
# to any host in a particular DNS domain.  Review the WebSEAL
# documentation and understand the security implications of domain
# session cookies before enabling any entries in this stanza.

# Format is:
#    domain = example.com
#    domain = otherdomain.com
#    ...



[content]
##################################
# CONTENT
##################################

#----------------------
# LOCAL DIRECTORIES AND FILES
#----------------------

# Root directory of the document tree.
#
# IMPORTANT:  This entry is used in two cases:
# 1) The first time the WebSEAL server is started after
#    the product installation.
#
# 2) In the event that the junction database has been removed and
#    the server restarted.
#
# In both of these cases, the value is then stored in the junction database
# and modifying the value below will have no effect after this.
# Future modifications to the document root must be performed by
# changing the local junction using the pdadmin program.
doc-root = /opt/pdweb/www-default/docs

# Name of directory index file.
# If a request is made for a directory located on the local WebSEAL server,
# WebSEAL will attempt first to find a file by this name located in that
# directory before attempting a directory listing.
directory-index = index.html

# Absolute path to a directory in which local files removed
# by the DELETE method will be moved until an administrator
# decides to remove them.
# NOTES:
#   1) This does not apply to empty directories, which will just be deleted.
#   2) If a file already exists in this directory with the same name,
#      it will be replaced.
#   3) The specified directory must be writable by the
#      WebSEAL server user account.
#   4) If this parameter is left commented out, the files will
#      just be deleted from the system.
#
# delete-trash-dir =

# The utf8-template-macros-enabled option controls how standard WebSEAL files,
# such as login.html, have data inserted into them when %MACRO% strings are
# encountered.  If you have modified your WebSEAL html charset value to be the
# local code page, and not UTF-8, then set this option to "no".  This affects
# files in the error-dir and mgt-pages-root directories, listed below.
utf8-template-macros-enabled = yes

#----------------------
# ERROR PAGES
#----------------------
# Directory containing WebSEAL error description files
# This path is relative to the server-root value in the [server] stanza
error-dir = lib/errors

[acnt-mgt]
#----------------------
# ACCOUNT MANAGEMENT PAGES
#----------------------
# Root of account management pages.
# The actual directory used is a subdirectory of this root
# determined by localization.
# This path is relative to the server-root value in the [server] stanza
mgt-pages-root = lib/html

# Standard login form
login = login.html

# Page displayed after successful login
login-success = login_success.html

# Page displayed after successful logout
logout = logout.html

# Page displayed if user authentication failed due to a locked account
account-locked = acct_locked.html

# Page displayed if user authentication failed due to an expired password
passwd-expired = passwd_exp.html

# Change password form
passwd-change = passwd.html

# Page displayed if password change request was successful
passwd-change-success = passwd_rep.html

# Page displayed if password change request failed
passwd-change-failure = passwd.html

# Page containing links to valid administration pages
help = help.html

# Token login form
token-login = tokenlogin.html

# Next-token form
next-token = nexttoken.html

# Certificate login form.
# This is only used if accept-client-certs = prompt_as_needed.
certificate-login = certlogin.html

# Step-up authentication login form
stepup-login = stepuplogin.html

# Switch user management form
switch-user = switchuser.html

# Page displayed if a client fails to authenticate with
# a certificate and certificates are necessary.
cert-failure = certfailure.html

# Page displayed if a client attempts to step up to certificates over http
cert-stepup-http = certstepuphttp.html

# Page displayed when a user has too many concurrent sessions and
# must either cancel their new login or terminate the other sessions.
too-many-sessions = too_many_sessions.html

#-----------------------------
# ACCOUNT EXPIRY NOTIFICATION
#-----------------------------
# The following configuration option will determine whether a user with
# an invalid/expired account will be notified as such on an attempted login,
# or if he/she will receive the same message as if invalid authentication
# information (i.e. an invalid username, password, or client certificate)
# had been submitted.
account-expiry-notification = no

#----------------------
# AUTHORIZATION ERRORS
#----------------------

# By default, WebSEAL will return the standard 'Forbidden' page for
# all authorization failures.

# If client-notify-tod = yes, clients failing a time-of-day
# POP access check will be sent a specific error page informing them
# of the reason for their authorization failure.
client-notify-tod = no

#---------------------
# Change Password Authentication
#---------------------
# Enable this option to allow users to authenticate when changing a password.
# If a user's password is expired, and this option is on, then WebSEAL will
# authenticate the user with the expired password, change the password,
# and ensure that the user remains authenticated. This is helpful in failover
# situations where the user may be served the password change form from one
# WebSEAL replica, but the form posts to another replica where the user's
# session does not exist.
change-password-auth = no

#----------------------
# AUTOMATIC REDIRECT
#----------------------
# Page to which users are automatically redirected after completing a successful
# authentication.
#
# The format can either be an absolute URL or server relative URL:
#       login-redirect-page = http://www.ibm.com/
#       login-redirect-page = /jct/page.html

#--------------------------
# LOCAL RESPONSE REDIRECTS
#--------------------------
# Enable/disable sending a redirect instead of serving management or error
# pages from the local system.
#
# The local-response-redirect-uri parameter must be set in order for this
# option to function.
enable-local-response-redirect = no

#---------------------------
# PKMSLOGOUT FILENAME
#---------------------------
# Set this parameter to 'yes' to allow the specification of a custom
# response file to be displayed to users upon logging out in a query string
# appended to the pkmslogout URL.  e.g.  /pkmslogout?filename=<name>
# By default, this parameter is set to 'no' to cause any such query string to be
# ignored.
use-filename-for-pkmslogout = no

# The following option can be disabled to loosen the restrictions normally
# enforced on the name of the /pkmslogout custom response file. When set to
# 'no' only '/', '\', characters outside of the ASCII range 0x20 - 0x7E, and
# filenames that begin with '.' will be disallowed.
use-restrictive-logout-filenames = yes

#-----------------------------
# ALLOW UNAUTHENTICATED LOGOUT
#-----------------------------
# Set this parameter to 'yes' to allow unauthenticated users to be able
# to request the pkmslogout resource.  If this parameter is set to 'no'
# an unauthenticated user will be requested to authenticate before the
# pkmslogout resource is returned.
allow-unauthenticated-logout = no

# In older releases, WebSEAL would, in rare cases, redirect clients
# to the document root directory instead of returning the login success
# page following a successful authentication.  This behavior was eliminated
# in later releases.  Set redirect-to-root-for-pkms to 'yes' to restore
# the previous behavior.
redirect-to-root-for-pkms = no

[tfimsso:<jct-id>]

#
# This stanza is used to hold the TFIM single sign-on configuration information
# for a single junction.
#
# For standard junctions the stanza name will be qualified with the name of the
# junction point (including the leading '/').  An example stanza name might be:
# [tfimsso:/junction_a]
#
# For virtual host junctions the stanza name will be qualified with the
# virtual host label.  An example stanza name might be:
# [tfimsso:www.ibm.com]
#

# The type of token which will be requested from TFIM.  Currently the only
# token type which is supported is 'kerberos'.
token-type = kerberos

# The 'applies-to' search criteria used when locating the appropriate STS
# module within TFIM.  Generally this entry should be of the format:
# http://<webseal-server>/<junction> (similar to the URL which is used to
# access the junction).
applies-to = http://<webseal-server>/<junction>

# The service-name configuration entry will be used:
#   1. By TFIM when searching for a matching trust chain.  This configuration
#      entry will be compared against the configured 'AppliesTo' service name
#      value for each trust chain.  The second field within the 'AppliesTo'
#      service name configuration entry should be set to either '*' to match
#      all service names, or it should be set to the value defined by this
#      configuration item.  Refer to the TFIM documentation for further
#      details on configuring Trust Chains.
#   2. As the service principal name of the delegating user when creating the
#      Kerberos token.  The service principal name can be determined by
#      executing the Microsoft utility 'setspn', i.e. setspn -L <user>,
#      where <user> is the identity of the user which the junctioned Web server
#      is running as.
service-name = <spn>

# The length of time, in seconds, by which the expiry time of a security token
# will be reduced.  This entry is used to make allowances for differences in
# system times and transmission times for the security tokens.
renewal-window = 15

# The number of security tokens which should be retrieved from TFIM in a single
# request.  These security tokens will be cached by WebSEAL and then used on
# subsequent requests.  Tuning of this parameter will be important for
# performance.  If the value is large there will be fewer requests to TFIM,
# but the responses to these requests will be larger.
token-collection-size = 10

# This boolean value is used to indicate whether a security token should be
# sent for every HTTP request, or whether WebSEAL should wait for a 401
# response from the back-end Web server before adding the security token.  This
# configuration item is used to avoid the unnecessary overhead of generating
# and adding a security token to every request if the back-end Web server is
# capable of maintaining user sessions.
always-send-tokens = false

# The name of the WAS cluster which houses this TFIM service.  There should
# also be a corresponding [tfim-cluster:<cluster>] stanza which contains the
# definition of the cluster.
tfim-cluster-name = my-cluster

[tfim-cluster:my-cluster]

#
# This stanza contains definitions for a particular cluster of TFIM
# servers.
#

#
# A specification for the server which is used when communicating with a
# single TFIM server which is a member of this cluster.  Values for this
# entry are defined as follows:
#
#       {[0-9],}<URL>
#
# Where the first digit (if present) represents the priority of the server
# within the cluster (9 being the highest, 0 being lowest).  If the priority
# is not specified, a priority of 9 is assumed.  The <URL> can be any
# well-formed HTTP or HTTPS URL.
#
# Multiple server entries can be specified for failover and load balancing
# purposes.  The complete set of these server entries defines the
# membership of the cluster for failover and load balancing.
#
# server = 9,http://tfim.example.com/TrustServerWST13/services/RequestSecurityToken


#
# The maximum number of cached handles, used when communicating with TFIM.
#

handle-pool-size = 10

#
# The length of time, in seconds, before an idle handle will be removed
# from the handle pool cache.
#

handle-idle-timeout = 240

#
# The length of time, in seconds, to wait for a response from TFIM.
#

timeout = 240

#
# The following SSL entries are optional and are only required if:
#    1. At least one server entry indicates that SSL is to be used (i.e.
#       starts with https:)
#    2. A certificate is required other than that which is used by this server
#       when communicating with the policy server (details of the
#       default certificate can be found in the [ssl] stanza of this
#       configuration file.
#
# If these entries are required and are not found within this stanza, the
# default [ssl] stanza will be searched.
#
#
# The name of the key database file which houses the client certificate to be
# used.
#
# ssl-keyfile =

#
# The name of the password stash file for the key database file.
#
# ssl-keyfile-stash =

#
# The label of the client certificate within the key database.
#
# ssl-keyfile-label =

#
# This configuration entry specifies the DN of the server (obtained from the
# server SSL certificate) which will be accepted.  If no entry is configured
# all DN's will be considered to be valid.  Multiple DN's can be specified by
# including multiple configuration entries of this name.
#
# ssl-valid-server-dn =

#
# The entry controls whether FIPS communication is enabled with TFIM or
# not.  If no configuration entry is present the global FIPS setting (as
# determined by the TAM policy server) will take effect.
#
# ssl-fips-enabled =


[local-response-redirect]
# URL to which management page requests are redirected. All management
# requests will be redirected to this URL with a query string indicating
# the operation requested, along with any macros (as configured in the
# [local-response-macros] stanza). See the WebSEAL Admin Guide for the
# specific format of the query string, and how the receiving handler should
# treat the requests.
#
# The URL may be absolute or server-relative. Only use an absolute URL if
# the destination server is not accessed via WebSEAL.
#
# Valid formats are:
#  http[s]://<server>/<path>
#  /<path>

#local-response-redirect-uri = /jct/redirect/handler

[local-response-macros]
# URL-encoded macros to include in the query string for all management
# page requests.
#
# These will increase the length of the local response redirect URI. Certain
# user-agents, such as WAP browsers, may have URI length limitations, so
# add macros sparingly and cautiously. Note that any special characters will
# be URI-encoded, further increasing the length of the local response URI.
#
# Do not modify the macro strings or add new ones; all supported macros are
# listed below. Comment/uncomment desired macros for inclusion in the local
# response URI. See the WebSEAL Admin Guide for definitions of the content
# corresponding to each macro.

#macro = USERNAME
#macro = METHOD
#macro = URL
#macro = REFERER
#macro = HOSTNAME
#macro = AUTHNLEVEL
#macro = FAILREASON
#macro = PROTOCOL
#macro = ERROR_CODE
#macro = ERROR_TEXT
#macro = OLDSESSION

[enable-redirects]
# This stanza contains a list of authentication mechanisms
# for which automatic redirects are enabled.
# Valid choices are forms-auth, token-auth, basic-auth, cert-auth,
# and ext-auth-interface
# Any or all of them may be enabled.
#redirect = forms-auth
#redirect = basic-auth
#redirect = token-auth
#redirect = cert-auth
#redirect = ext-auth-interface

[cgi]
#----------------------
# LOCAL CGI
#----------------------

# Timeout (in seconds) for writing to and reading from child CGI processes
cgi-timeout = 120

[cgi-types]
#
# CGI file extension to command mappings (Windows NT Only)
#
# For WIN32 servers we nominate CGI file extensions and the program
# that is used to execute them. If a CGI has an extension that is not
# in this list then it is not executed.  The sole exception to this is that
# files with a .EXE extension are executable by default.
#
# Command line arguments are not supported.
#
# IMPORTANT NOTE:
#      Any mapping to 'cmd' (and most shells) can create a potential security
#      risk for any CGI enabled NT web server due to certain default behaviours.
#      These risks are well publicized, so please use with caution.
#

# bat = cmd
# cmd = cmd
# pl = perl
# sh = sh
# tcl = tclsh76

[cgi-environment-variables]
# Environment variables to be inherited by CGI programs
# The variable names are case sensitive.  The PD_HOME environment
# variable must be set for CGI programs installed with the WebSEAL
# package to function properly.
#
# Syntax:
# ENV = <variable name>
#
#ENV = SystemDrive
ENV = PD_HOME
ENV = SystemRoot
ENV = PATH
ENV = LANG
ENV = LC_ALL
ENV = LC_CTYPE
ENV = LC_MESSAGES
ENV = LOCPATH
ENV = NLSPATH

[content-index-icons]
#----------------------
# ICONS
#----------------------

#
# Directory indexing icons
#
# This stanza specifies the icons to use in directory indices.  Directory
# indices are generated by the server if the directory does not contain
# an index file.  This generated index contains a list of the directory
# contents, with links to each member of the directory.  The index is only
# generated if the client requesting the list has 'list' permissions for
# the requested directory.
#
# Each entry has the following form:
#
#       <type> = <icon>
#
# Where:
#       type    is a wildcard pattern which specifies which document types
#               the icon should be used for.
#
#       icon    is the location of the icon in the server's Web space.
#
# Note that the paths given below are treated as literal strings and put
# straight into the generated HTML as embedded images, ie <IMG SRC="path">.
# The browser will then try to fetch these images using the supplied path.
# Make sure this path is a valid URI.
#
image/* = /icons/image2.gif
video/* = /icons/movie.gif
audio/* = /icons/sound2.gif
text/html = /icons/generic.gif
text/* = /icons/text.gif
application/x-tar = /icons/tar.gif
application/* = /icons/binary.gif


#
# Icons for other objects
#
[icons]

# icon to use for subdirectories
diricon = /icons/folder2.gif

# icon to use for the parent directory
backicon = /icons/back.gif

# icon to use for unknown file types
unknownicon = /icons/unknown.gif

[content-cache]
#----------------------
# DOCUMENT CACHING
#----------------------

# The entries below define the caches which the Web Server uses to store
# documents in memory.
#
# Syntax:
# <MIME-Type> = <Cache-Type>:<Cache-Size>{:<Def-Max-Age>}
#
# Where:
#
#   <MIME-Type>
#       Represents any valid MIME type conveyed in an HTTP "Content-Type:"
#       response header.  This value may contain a wildcard (*).  A value
#       of */* represents a default object cache that will hold any object
#       that does not correspond to an explicitly configured cache.
#
#   <Cache-Type>
#       Defines the type of backing store to use for the cache.  Currently
#       only "memory" caches are supported.
#
#   <Cache-Size>
#       Represents the maximum size to which the given cache may grow before
#       objects are removed according to a LRU algorithm.  This value is
#       defined in Kbytes.
#
#   <Def-Max-Age>
#       Represents the maximum age of a session cache entry if expiration
#       information is missing from the original response.  This value is
#       defined in seconds.  If no value is supplied a default maximum age
#       of 3600 (i.e. 1 hour) will be applied.
#
# No Caching is performed if no caches are defined.  If no default cache
# is specified, documents which do not match any cache are not cached.
#
# text/html = memory:2000
# image/* = memory:5000
# */* = memory:1000


[compress-mime-types]
#----------------------
# HTTP COMPRESSION MIME-TYPE CONFIGURATION
#----------------------

# This stanza allows HTTP compression to be enabled or disabled based
# on the mime-type of the response and the size of the returned document.
# Order is important.  The first entry that matches a returned document
# will be used for that document.
#
# Syntax:
# <MIME-type> = <Min-Doc-Size>[:<Compress-Level>]
#
# Where:
#
#   <MIME-Type>
#       Represents any valid MIME type conveyed in an HTTP "Content-Type:"
#       response header.  This value may contain a wildcard (*).  A value
#       of */* will match all mime-types.
#
#   <Min-Doc-Size>
#       The minimum document size to be compressed.  A size of -1 means never
#       to compress this mime-type.  A size of 0 means to compress the
#       document regardless of its size.  A size greater than 0 means that the
#       document will only be compressed if its initial size is greater than
#       or equal to Min-Doc-Size.
#
#   <Compress-Level>
#       The compression level to be used for documents of this MIME type.
#       The compression level must be between 1 and 9, inclusive.  Higher
#       compression levels decrease the size of the compressed data at the
#       expense of additional CPU utilization.  This value is optional; if it
#       is not specified a compression level of 1 is used.
#
# These example configuration lines will:
# - disable compression for images.
# - enable compression for HTML documents larger than 1000 bytes.
# - enable compression for all other text documents regardless of size.
# - enable compression of PDF documents of all sizes at compression level 5.
# - disable compression for any other documents.
#
# image/* = -1
# text/html = 1000
# text/* = 0
# application/pdf = 0:5
# */* = -1

*/* = -1


[compress-user-agents]
#----------------------
# HTTP COMPRESSION USER-AGENT CONFIGURATION
#----------------------

# This stanza allows HTTP compression to be enabled or disabled based
# on the user-agent header sent by clients.  This stanza should be used
# to disable compression for clients which send an "accept-encoding: gzip"
# HTTP header but don't actually handle gzipped content-encodings properly
#
# Syntax:
# <Pattern> = <Compression>
#
# Where:
#
#   <Pattern>
#       A wild card pattern to match a particular user-agent header
#
#   <Compression>
#       Is yes if the user-agent can handle compressed data, no otherwise.
#
# The first matching entry is used when determining whether a user-agent
# can handle compression content-encodings.  If no entry matches the
# user-agent's accept-encoding header is assumed to be correct.  User-agents
# that do not send an "accept-encoding: gzip" header will never receive
# compressed data.


[content-mime-types]
#----------------------
# MIME TYPES
#----------------------

# This stanza defines the MIME type for particular document extensions.
#
# Syntax:
#       <extension> = <type>
#
# where
#       extension       is the extension of documents of this MIME type
#       type            is a MIME type
#
# The first matching entry is used when determining the type of a particular
# document.
#
html = text/html
htm = text/html
gif = image/gif
jpeg = image/jpeg
ps = application/postscript
shtml = text/x-server-parsed-html
jpg = image/jpeg
jpe = image/jpeg
mpeg = video/mpeg
mpe = video/mpeg
mpg = video/mpeg
bin = application/octet-stream
exe = application/octet-stream
Z = application/octet-stream
EXE = application/octet-stream
dll = application/octet-stream
DLL = application/octet-stream
ivsrv = application/octet-stream
pdf = application/pdf
au = audio/basic
snd = audio/basic
aiff = audio/x-aiff
aifc = audio/x-aiff
aif = audio/x-aiff
wav = audio/x-wav
ai = application/postscript
eps = application/postscript
rtf = application/rtf
zip = application/zip
ief = image/ief
tiff = image/tiff
tif = image/tiff
ras = image/x-cmu-raster
pnm = image/x-portable-anymap
pbm = image/x-portable-bitmap
pgm = image/x-portable-graymap
ppm = image/x-portable-pixmap
rgb = image/x-rgb
xbm = image/x-xbitmap
xpm = image/x-xpixmap
xwd = image/x-xwindowdump
txt = text/plain
rtx = text/richtext
tsv = text/tab-separated-values
etx = text/x-setext
qt = video/quicktime
mov = video/quicktime
avi = video/x-msvideo
movie = video/x-sgi-movie
js = application/x-javascript
ls = application/x-javascript
mocha = application/x-javascript
wrl = x-world/x-vrml
dir = application/x-director
dxr = application/x-director
dcr = application/x-director
crt = application/x-x509-ca-cert
tar = application/x-tar

# default type to assign to pages that don't match any of the above
deftype = text/plain

[content-encodings]
#----------------------
# CONTENT ENCODINGS
#----------------------

# Some browsers support content encodings.  These entries map a document
# extension to an encoding type.
gz = x-gzip
Z = x-compress


[arm]
##################################
# ARM 4.0 Transaction Reporting
##################################

# enable (default of "no"):  When set to "yes" WebSEAL will register itself as
# an application to ARM and register its transaction names.  All other [arm]
# options will not be used if this option is set to "no".
enable-arm = no

# report-transactions (default of "no"):  This option sets the reporting state
# WebSEAL will start with.  At any time while WebSEAL is running this state
# can be changed using the WebSEAL pdadmin "arm { on | off }" command.  When
# set to "no" WebSEAL will not report transactions until an "arm on" command
# is issued.
report-transactions = no

# accept-correlators (default of "no"): When set to "yes" WebSEAL will look for
# a header in client requests with the name that is specified by the option
# "correlator-header" below and if present will parse and use it with the
# reporting of its initial transaction.  This allows WebSEAL to correlate
# its transactions (and those of its junctions) to upstream applications.
accept-correlators = no

# library (default of "libarm4.a" for AIX, "libarm4.dll" for Windows,
# "libarm4.sl" for HP-UX, and "libarm4.so" for all other operating systems):
# This option can be used to override the default name of the ARM client
# library used by WebSEAL to register and report ARM transactions.  A full
# pathname is permitted such as "/usr/lib/libarm4.so".
#library = libarm4.so

# app-group (no default): ARM allows applications to optionally report
# themselves as a member of a group of applications.  If set, this value is
# passed to ARM when WebSEAL registers itself as an ARM application.
#app-group =

# app-instance (default supplied by ARM):  ARM allows an application
# instance to name itself.  This value is passed to ARM when WebSEAL registers
# itself as an ARM application.  If it is not provided then ARM will provide a
# value, usually the hostname of the machine WebSEAL is running on.
#app-instance = <Your App Instance Name>

# correlator-header (default "arm_correlator"): WebSEAL passes Correlators
# to Junctions in an HTTP header and can optionally accept correlators in an
# HTTP header.  This option can be used to override the default name of that
# header.
correlator-header = arm_correlator


[logging]
##################################
#  LOGGING
##################################

# Server error log file
server-log = /var/pdweb/log/msg__webseald-default.log

# Configuration data log file
config-data-log = /var/pdweb/log/config_data.log

# Log files' size limit
# Applies to the request, referer, and agent logs
# Negative values will cause the logs to be rolled over daily.
# A value of zero will cause no rollover file to be created.
max-size = 2000000

# Frequency in seconds to force a flush of log buffers
flush-time = 20

# Enable the request log
requests = yes
# Location of the request log
requests-file = /var/pdweb/www-default/log/request.log

# Enable the the referer log
referers = yes
# Location of the referer log
referers-file = /var/pdweb/www-default/log/referer.log

# Enable the user agent log
agents = yes
# Location of the user agent log
agents-file = /var/pdweb/www-default/log/agent.log

# Log requests with time in GMT instead of local TZ
gmt-time = no

# Log the absolute URI (adds protocol and host to the path) in the
# request log, combined log, and http audit records.
absolute-uri-in-request-log = no

# Log the Host: header at the front of each line in the request log and
# the combined log.
host-header-in-request-log = no

# If log-invalid-requests is set to 'yes', WebSEAL will log every
# request, even if a request is malformed or for some other reason
# is not processed to completion.
log-invalid-requests = yes


[audit-mime-types]
# WebSEAL can be configured to decide whether an audit event should be
# generated for a particular HTTP request based on the content-type of the
# return document.  The format of the audit-mime-types stanza is:
#<MIME-pattern> = <yes|no>
# For example:
#text/html = yes
#*/* = no


[audit-response-codes]
# WebSEAL can be configured to decide whether an audit event should be
# generated for a particular HTTP request based on the response code of the
# returned document.  The format of the audit-response-codes stanza is:
#<code> = <yes|no>
# For example:
#304 = no
#302 = no


[aznapi-configuration]
###############################
# AUTHORIZATION API
###############################

# The path for the local client's policy database cache file.
db-file = /var/pdweb/db/webseald-default.db

# Update poll interval. This is the interval, in seconds, between checks
# for updates to the master authzn server. The local cache is only rebuilt
# if an update is detected. Values can be "disable", "default" or a time
# in seconds.
cache-refresh-interval = disable

# Flags to enable the reception of policy cache update notifications.
# Values can be one of: "disable", "enable"
# A "disable" value disables the notification listener.
#
# This parameter is set by the svrsslcfg utility.
listen-flags = enable

#----------------------
# POLICY CACHE TUNING
#----------------------
# The maximum size of the in-memory policy cache is configurable.
# The cache consists of policy and the relationships between policy
# and resources.  The knowledge that a resource has no directly
# associated policy is also cached.
#
# The maximum cache size should be relative to the number
# of policy objects defined and the number of resources
# protected and the available memory.
#
# A reasonable algorithm to begin with is:
# (number of policy objects * 3) + (number of protected resources * 3)
#
# This value controls how much information is cached.   A larger
# cache will  potentially improve the application performance but use
# addditional memory as well.
#
# Size is specifed as the number of entries.
#
# policy-cache-size = 32768


#----------------------
# AUTHORIZATION API LOGGING
#----------------------
# Audit Trail
# Enable/Disable audit event recording
logaudit = no

# Location of the audit trail file for WebSESAL
auditlog = /var/pdweb/log/aznapi_webseald-default.log

# Name of daemon whose activities are audited
logclientid = webseald

# To selectively capture audit events from specific components, uncomment the
# appropriate auditcfg lines.
#auditcfg = azn
#auditcfg = authn
#auditcfg = http

# Log file size limit
# Negative values will cause the logs to be rolled over daily.
# A value of zero will cause no rollover file to be created.
logsize = 2000000

# Frequency, in seconds, to flush the log buffers
logflush = 20

# Attributes to be audited.
# tagvalue_su-admin is audited by default.
audit-attribute = tagvalue_su-admin


#---------------------------
# AUTHORIZATION API SERVICE DEFINITIONS
#---------------------------
# Each stanza entry defines different types of aznAPI service.
# For more information refer to the Authorization API programmers
# guide.
#
# Each entry is of the format:
#
# 	<service-id> = <path-to-dll> [ & <params> ... ]
#
# The <service-id> is the string by which the service can be
# identified by the aznAPI client. The <path-to-dll> is the
# fully qualified path to the DLL which contains the service
# executable code. Optionally you can specify parameters to
# pass to the service when it is initialised by the aznAPI.
# The parameters are considered to be all data following the
# '&' symbol in the string.
#


#---------------------------------------------------
# BOOLEAN AUTHORIZATION RULES CONFIGURATION ENTRIES.
#---------------------------------------------------
#
# A list of string prefixes that identify Access Decision Information (ADI)
# to be supplied by the resource manager (in this case, WebSEAL). The
# default setting below tell the authorization engine that when it requires
# ADI with the prefixes "AMWS_hd_", "AMWS_qs_" or "AMWS_pb_" to evaluate a
# boolean authorization rule, and the ADI is not available in the credential
# or application context passed in with the access decision call, that the
# engine should fail the access decision and request that the resource manager
# retry the request and provide the required data in the application context
# of the next request.  The prefixes given below represent special values
# for WebSEAL:
# AMWS_hd_ - Indicates that the ADI can be found within the HTTP Environment
#	     (Headers) of the request that WebSEAL is currently serving.
# AMWS_qs_ - Indicates that the ADI can be found within the Query String of
#	     the request that WebSEAL is currently serving.
# AMWS_pb_ - Indicates that the ADI can be found within the POST Body of the
#	     request that WebSEAL is currently serving.
#
resource-manager-provided-adi = AMWS_hd_
resource-manager-provided-adi = AMWS_pb_
resource-manager-provided-adi = AMWS_qs_


# To enable certain Boolean Authorization Rules options, it is necessary
# to set the permission information that the authorization engine will
# return to WebSEAL.
# The permission attribute that will enable the authorization engine to
# request ADI from the current WebSEAL request is
# "azn_perminfo_rules_adi_request".
# To use the "-R" junction option, the "azn_perminfo_reason_rule_failed"
# attribute must be included.
# To enable the Privacy Redirection capabilities of the AMWebARS Web Service,
# the "azn_perminfo_amwebars_redirect_url" must be included.
permission-info-returned = azn_perminfo_rules_adi_request azn_perminfo_reason_rule_failed
mode = local
azn-app-host = cyzyegov1
azn-server-name = default-webseald-cyzyegov1
pd-user-name = default-webseald/cyzyegov1


# The prolog to be added to the top of the XML document that is created
# using the Access Decision Information (ADI) needed to evaluate a boolean
# authorization rule. If not specified then the default XML prolog is:
#
#       <?xml version='1.0' encoding='UTF-8'?>
#
# It is strongly suggested that you read and thoroughly understand the
# boolean authorization rules documentation before attempting to change
# this setting from the default provided.
#
## input-adi-xml-prolog = <?xml version='1.0' encoding='UTF-8'?>


# The prolog to be added to the top of the XSL styleheet that is created
# using the XSL text that defines a boolean authorization rule.  If not
# specified then the default XSL stylesheet prolog is:
#
#       <?xml version='1.0' encoding='UTF-8'?> <xsl:stylesheet xmlns:xsl=\
#               'http://www.w3.org/1999/XSL/Transform' version='1.0'> \
#           <xsl:output method = 'text' omit-xml-declaration='yes' \
#           indent='no'/> <xsl:template match='text()'> </xsl:template>
#
# It is strongly suggested that you read and thoroughly understand
# the boolean authorization rules documentation before attempting
# to change this setting from the default provided.
#
## xsl-stylesheet-prolog = <?xml version='1.0' encoding='UTF-8'?> <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'> <xsl:output method = 'text' omit-xml-declaration='yes' indent='no'/> <xsl:template match='text()'> </xsl:template>


# A list of configured entitlements service IDs that will be
# queried by the rules engine if missing ADI is detected during an
# authorization rule evaluation. Entitlement services listed here
# must adhere to the input and output specifications for a dynamic ADI
# retrieval service which are outlined in the Authorization Programmer's
# Guide.  When ADI is found to be missing during a rule evaluation each
# service in this list is queried in the order defined in this entry.
# These entries must refer to existing entitlement services that were
# loaded via service entries in the entitlement service configuration
# stanza or initialization attribute.
#
# Example:
#	dynamic-adi-entitlement-services = AMWebARS_A
#	dynamic-adi-entitlement-services = AMWebARS_B
#
#dynamic-adi-entitlement-services = <service ID of AMWebARS Entitlement Service>

## Uncomment this if you wish to use the credential policy entitlements service
#cred-attribute-entitlement-services = TAM_CRED_POLICY_SVC

[aznapi-entitlement-services]
AZN_ENT_EXT_ATTR = azn_ent_ext_attr

## Uncomment these entries if you wish to use the credential policy
## entitlements service
#TAM_CRED_POLICY_SVC = amwcredpolsvc
#TAM_REG_ENT_SVC = azn_ent_registry_svc

# Dynamic ADI Entitlement Services
#<service ID of AMWebARS Entitlement Service> = azn_ent_amwebars


[amwebars]
#################################################
# DYNAMIC ADI ENTITLEMENT SERVICE CONFIGURATION #
#################################################
#service-url = <url of AMWebARS Web Service>

[credential-policy-attributes]
###############################
# CREDENTIAL POLICY ATTRIBUTES
###############################
# This stanza controls which TAM policy values are stored in credentials
# during authentication.  In order for this stanza to take effect you must
# also enable the TAM credential policy entitlements service in the aznapi
# stanzas above this one.
#
# Format is:
#    <policy-name> = <credential-attribute-name>
#
# Supported policies are listed here.  Uncomment the policies you wish
# to add to credentials.

#AZN_POLICY_MAX_FAILED_LOGIN = tagvalue_max_failed_login
#AZN_POLICY_DISABLE_TIME = tagvalue_disable_time
#AZN_POLICY_ACCOUNT_EXPIRY_DATE = tagvalue_account_expiry_date
#AZN_POLICY_MAX_PASSWORD_AGE = tagvalue_max_password_age
#AZN_POLICY_MAX_PASSWORD_REPEATED_CHARS = tagvalue_max_password_repeated_chars
#AZN_POLICY_MIN_PASSWORD_ALPHAS = tagvalue_min_password_alphas
#AZN_POLICY_MIN_PASSWORD_NON_ALPHAS = tagvalue_min_password_non_alphas
#AZN_POLICY_PASSWORD_SPACES_ALLOWED = tagvalue_password_spaces_allowed
#AZN_POLICY_MIN_PASSWORD_LENGTH = tagvalue_min_password_length
#AZN_POLICY_TOD = tagvalue_tod
#AZN_POLICY_MAX_CONCURRENT_WEB_SESSIONS = tagvalue_max_concurrent_web_sessions

[policy-director]
###############################
# POLICY DIRECTOR
###############################

# File containing Access Manager configuration info
config-file = /opt/PolicyDirector/etc/pd.conf

[webseal-config]
#################################################
# WebSEAL Configuration Information
#################################################
# This value is used by the WebSEAL server to determine the version
# of WebSEAL that generated this configuration file.  Do not manually
# modify this value unless specifically instructed to do so by a
# support representative or documentation.
orig-version = 6.1.0
version = 6.1.0

# WebSEAL instance name
instance-name = default

# Tivoli Common Directory (TCD) for logging.
# This value is set only when TCD is enabled.
tivoli_common_dir =

# WebSEAL configuration status
status = config

[p3p-header]
#
# This stanza specifies the P3P compact policy that applies
# to all HTTP cookies set.  See the W3C P3P Specification
# for more information about P3P:  http://www.w3c.org/TR/P3P/
#
# The default configured policy allows cookies to be accepted
# by the default privacy settings for Microsoft Internet Explorer
# version 6.
#
# Before configuring any P3P policy, consult the P3P Technical
# Recommendation Specification to ensure that the values configured
# match your organization's privacy policy.
#
# If a junction server sets a P3P header in it's response, a
# decision must be as to whether it should be preserved as it is,
# or replaced by the WebSEAL policy.  This determination will be
# made based on the value of the 'preserve-p3p-policy' item
# in the [server] stanza.

#
# The 'p3p-element' item can be used to specify any elements
# to add to the P3P header besides the compact policy configured
# with the other configuration items in this stanza.  This can
# be used to supply a reference to a full XML policy:
#
# p3p-element = policyref="/w3c/p3p.xml"
#

#
# The 'access' item specifies the access the user has to the
# information contained within and linked to the cookie.
#
# Possible values are 'none', 'all', 'nonident', 'contact-and-other',
# 'ident-contact', 'other-ident'.
#
access = none

#
# The 'disputes' item, if yes, specifies that the full P3P policy
# contains some information regarding disputes over the information
# contained within the cookie.
#
# The default value is 'no'.
#
# disputes = no

#
# The 'remedies' item specifies the possible remedies for disputes.
# Possible values are:  'correct', 'money', and 'law'.
# If not specified, no remedy information is included in the policy.
#
# remedies = correct

#
# The 'non-identifiable' item, if yes, specifies that no information
# in the cookie, or linked to by the cookie, personally identifies the
# user in any way.
#
non-identifiable = no

#
# The 'purpose' item specifies the purpose of the information in the
# cookie and linked to by the cookie.
#
# Possible values are 'current', 'admin', 'develop', 'tailoring',
# 'pseudo-analysis', 'pseudo-decision', 'individual-analysis',
# 'individual-decision', 'contact', 'historical', 'telemarketing',
# and 'other-purpose'.
#
# For all values except 'current', an additional specifier may be
# configured.  The possible values are 'always', 'opt-in', 'opt-out'.
# If no value is specified, 'always' will be used.
# This value is specified after the purpose and separated from it by a
# colon, for example:
#    purpose = contact:opt-in
#
purpose = current
purpose = other-purpose:opt-in

#
# The 'recipient' item specifies the recipients of the information in
# the cookie, and linked to by the cookie.
#
# Possible values are 'ours', 'delivery', 'same', 'unrelated',
#   'public', 'other-recipient'.
#
recipient = ours

#
# The 'retention' item specifies how long the information in the cookie
# or linked to by the cookie will be retained.
#
# Possible values are 'no-retention', 'stated-purpose',
#   'legal-requirement', 'business-practices', 'indefinitely'.
#
retention = no-retention

#
# The 'categories' item specifies the type of information stored in the
# cookie or linked to by the cookie.  If the 'non-identifiable' item
# is yes, then no categories need be configured.
#
# Possible values are: 'physical', 'online', 'uniqueid', 'purchase',
#   'financial', 'computer', 'navigation', 'interactive',
#   'demographic', 'content', 'state', 'political', 'health',
#   'preference', 'location', 'government', 'other-category'.
#
categories = uniqueid



[meta-info]
#
# Meta stanza
#

#
# version =
#
version = 1552

[manager]
master-host = cyzyegov1
master-port = 7135
management-domain = Default

[configuration-database]
file = /opt/pdweb/etc/webseald-default.conf.obf
